<CeciliaInterface>
csampler snd -label audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func 0 0 .001 1 .999 1 1 0 
cslider delinit -label Delay Left -unit s -rel log -min .001 -max 15 -init 0.025 -col green
cslider delinitr -label Delay Right -unit s -rel log  -min .001 -max 15 -init .028 -col green
cslider modepth -label ModDepth Left -rel log -min 0.0001 -max 1 -init .032  -col blue
cslider modepthr -label ModDepth Right -rel log -min 0.0001 -max 1 -init .032  -col blue
cslider modhz -label ModFreq Left -rel log -min 0.001 -max 200 -init 5.0 -unit Hz -col red
cslider modhzr -label ModFreq Right -rel log -min 0.001 -max 200 -init 5.3 -unit Hz -col red
cslider delayfdbk -label Feedback -unit % -min 0 -max 1 -init .5   -col orange
cslider mix -label Dry/Wet -min 0 -max 1 -unit % -init 1 -col blue
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>

             instr 1

aProc1       init           0
aProc2       init           0

aOri1  sampler        [snd],1

kmodep       =              gkmodepth*.1
kmodhz       =              gkmodhz
kmodepr      =              gkmodepthr*.1
kmodhzr      =              gkmodhzr
adelg        upsamp         gkdelinit
adelg        butterlp       adelg, 10
adeld        upsamp         gkdelinitr
adeld        butterlp       adeld, 10

amod51       jspline        kmodep, kmodhz*.9*p4,  kmodhz*1.1
amod52       jspline        kmodepr,kmodhzr*.9*p4, kmodhzr*1.1


adelsendd    =              aOri1+(aProc1*gkdelayfdbk)
aProc1       vdelay3        adelsendd,adeld*1000*(1+amod51)+(1/kr)*p4,4000

adelsendg    =              aOri1+(aProc2*gkdelayfdbk)
aProc2       vdelay3        adelsendg,adelg*1000*(1+amod52)+(1/kr)*p4,4000

kMix         port           gkmix, 0.05
aGauche      =              ((aProc2*kMix)+(aOri1*(1-kMix)))*0.15*gkenv
aDroite      =              ((aProc1*kMix)+(aOri1*(1-kMix)))*0.15*gkenv

             out           aGauche+aDroite

             endin

</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
                instr 1

aProc1          init            0
aProc2          init            0

aOri1,aOri2     sampler         [snd],1

kmodep          =               gkmodepth*.1
kmodhz          =               gkmodhz
kmodepr         =               gkmodepthr*.1
kmodhzr         =               gkmodhzr
adeld           upsamp          gkdelinitr
adeld           butterlp        adeld, 10
adelg           upsamp          gkdelinit
adelg           butterlp        adelg, 10

amod51          jspline         kmodep, kmodhz*.9*p4, kmodhz*1.1
amod52          jspline         kmodepr,kmodhzr*.9*p4, kmodhzr*1.1

adelsendd       =               aOri1+(aProc1*gkdelayfdbk)

aProc1          vdelay3         adelsendd,adeld*1000*(1+amod51)+(1/kr)*p4,4000

adelsendg       =               aOri2+(aProc2*gkdelayfdbk)

aProc2          vdelay3         adelsendg,adelg*1000*(1+amod52)+(1/kr)*p4,4000

kMix            port            gkmix, 0.05
aGauche         =               ((aProc2*kMix)+(aOri2*(1-kMix)))*0.25*gkenv
aDroite         =               ((aProc1*kMix)+(aOri1*(1-kMix)))*0.25*gkenv

                outs            aGauche, aDroite

                endin

</Stereo>


<CsoundScore>
;#   p1   p2   p3              p4    
i    1    0    [total_time]    1     
</CsoundScore>


<PythonScore>
import random

for i in range(1,getUserValue("no_of_grains")+2):
    forInst(1)
    p2 = random.uniform(.002, .006)
    p3 = "[total_time]"
    p4 = random.uniform(.99, 1.01)



</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
