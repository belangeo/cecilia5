<CeciliaInterface>
csampler snd -label audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func 0 0 .001 1 .999 1 1 0
cslider delay1d -label Delay 1 Right -unit s -rel log -min .0001 -max 10 -init .26 -col green
cslider delay1g -label Delay 1 Left -unit s -rel log -min .0001 -max 10 -init .36  -col green
cslider fdbk1 -label Feedback 1 -unit % -min 0 -max 1 -init .85  -col green    
cslider mixdelay1 -label Mix Delay1 -unit x -min .01 -max 2 -init 1 -col green
cslider delay2d -label Delay 2 Right -unit s -rel log -min .0001 -max 10 -init .16 -col marineblue
cslider delay2g -label Delay 2 Left -unit s -rel log -min .0001 -max 10 -init .15  -col marineblue
cslider fdbk2 -label Feedback 2 -unit % -min 0 -max 1 -init .85      -col marineblue
cslider mixdelay2 -label Mix Delay2 -unit x -min .01 -max 2 -init 1   -col marineblue
cslider jit -label Jitter Amount -unit x -min 0.01 -max 1 -init 0.1 -rel log -col red
cslider jits -label Jitter Speed -unit x -min 0.01 -max 50 -init .2 -rel log -col red
cslider mix -label Dry/Wet -min 0 -max 100 -unit % -init 100  -col blue
cpopup mode -label Routing -value Parallel Serial -init Serial -col royalblue
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>

             instr 1

aOri1  sampler        [snd]

adel1        upsamp         gkdelay1d
adel2        upsamp         gkdelay1g
adel3        upsamp         gkdelay2d
adel4        upsamp         gkdelay2g
adel1        butterlp       adel1, 10
adel2        butterlp       adel2, 10
adel3        butterlp       adel3, 10
adel4        butterlp       adel4, 10

kigaind1     =              gkmixdelay1
kigaind2     =              gkmixdelay2
kigaind1     =              gkmixdelay1
kigaind2     =              gkmixdelay2

ar4          init           0
ad4          init           0
ar2          init           0
ad2          init           0

avib         jspline        gkjit*.01, gkjits*.75, gkjits*1.275 
avib2        jspline        gkjit*.01, gkjits*.76, gkjits*1.375 
avib3        jspline        gkjit*.01, gkjits*.77, gkjits*1.175 
avib4        jspline        gkjit*.01, gkjits*.78, gkjits*1.2 

ar4          vdelay         aOri1+(ad4*gkfdbk1), (adel1+(1/kr))*1000*(1+avib), 15000
ad4          vdelay         aOri1+(ar4*gkfdbk1), (adel2+(1/kr))*1000*(1+avib2) , 15000

if gkmode == 1 goto del
ardel        =              aOri1
argel        =              aOri1
goto outer

del:
ardel        =              ar4
argel        =              ad4

outer:
ar2          vdelay         ardel+(ad2*gkfdbk2), ((adel3)+(1/kr))*1000*(1+avib3), 15000
ad2          vdelay         argel+(ar2*gkfdbk2), ((adel4)+(1/kr))*1000*(1+avib4), 15000

aProc1       =              ((ar4*kigaind1)+(ar2*kigaind2))
aProc2       =              ((ad4*kigaind1)+(ad2*kigaind2))

kMix         port           gkmix*.01, 0.05
aGauche      =              ((aProc1*kMix)+(aOri1*(1-kMix))) * 0.05 * gkenv
aDroite      =              ((aProc2*kMix)+(aOri1*(1-kMix))) * 0.05 * gkenv 

             out           aGauche+aDroite

             endin

</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
             instr 1

aOri1,aOri2  sampler        [snd]

adel1        upsamp         gkdelay1d
adel2        upsamp         gkdelay1g
adel3        upsamp         gkdelay2d
adel4        upsamp         gkdelay2g
adel1        butterlp       adel1, 10
adel2        butterlp       adel2, 10
adel3        butterlp       adel3, 10
adel4        butterlp       adel4, 10

kigaind1     =              gkmixdelay1
kigaind2     =              gkmixdelay2
kigaind1     =              gkmixdelay1
kigaind2     =              gkmixdelay2

ar4          init           0
ad4          init           0
ar2          init           0
ad2          init           0

avib         jspline        gkjit*.01, gkjits*.75, gkjits*1.275 
avib2        jspline        gkjit*.01, gkjits*.76, gkjits*1.375 
avib3        jspline        gkjit*.01, gkjits*.77, gkjits*1.175 
avib4        jspline        gkjit*.01, gkjits*.78, gkjits*1.2 

ar4          vdelay         aOri1+(ad4*gkfdbk1), (adel1+(1/kr))*1000*(1+avib), 15000
ad4          vdelay         aOri2+(ar4*gkfdbk1), (adel2+(1/kr))*1000*(1+avib2) , 15000

if gkmode == 1 goto del
ardel        =              aOri1
argel        =              aOri2
goto outer

del:
ardel        =              ar4
argel        =              ad4

outer:
ar2          vdelay         ardel+(ad2*gkfdbk2), ((adel3)+(1/kr))*1000*(1+avib3), 15000
ad2          vdelay         argel+(ar2*gkfdbk2), ((adel4)+(1/kr))*1000*(1+avib4), 15000

aProc1       =              ((ar4*kigaind1)+(ar2*kigaind2))
aProc2       =              ((ad4*kigaind1)+(ad2*kigaind2))

kMix         port           gkmix*.01, 0.05
aGauche      =              ((aProc1*kMix)+(aOri1*(1-kMix))) * 0.1 * gkenv
aDroite      =              ((aProc2*kMix)+(aOri2*(1-kMix))) * 0.1 * gkenv 

             outs           aGauche, aDroite

             endin

</Stereo>


<CsoundScore>
;#   p1    p2   p3              p4    p5   
f    10    0    8193            10    1    

i    1     0    [total_time]    

</CsoundScore>


<PythonScore>

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>

</CeciliaData>
