<CeciliaInterface>
csampler snd -label Audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func 0 0 .001 1 .999 1 1 0
cslider pitchshift -label Frequency Shift  -min 0 -max 2000 -init 100 -unit Hz -col marineblue
cslider mix -label Dry/Wet -min 0 -max 100 -unit % -init 100 -col blue
cpopup side -label Sideband  -value upper lower -col marineblue
cpoly poly -label voices -min 1 -max 10 -init 
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>


gik             ftgen       1, 0 ,8192, 10, 1


opcode hilbshift, a, akk

ain, kfreq, kside xin 


areal, aimag    hilbert     ain

asin            oscili      1, kfreq, 1
acos            oscili      1, kfreq, 1, .25

amod1           =           areal * acos
amod2           =           aimag * asin

aupshift        =           (amod1 + amod2) 
adownshift      =           (amod1 - amod2) 

if kside == 1 goto hi
aout            =           adownshift

goto outer

hi:

aout            =           aupshift 
outer:

                xout        aout

endop 



                instr 1

kpi             =           gkpitchshift 


aOri1     sampler     [snd],1,p4


aProc1 hilbshift aOri1, kpi*p4, gkside


kMix            port        gkmix*0.01, 0.05

aGauche         =           ((aProc1*kMix)+(aOri1*(1-kMix)))*gkenv

aGauche         =           aGauche * .05 / (ampdb(p5)/10)


                out        aGauche

                endin


                instr 2


ktrig           changed     gkpolynum,gkpolyspread
if ktrig = 1 then
                turnoff2    1,0,.5
                reinit      pass
endif
pass:

inum            =           0

generate:
ip4             random      1-i(gkpolyspread), 1+i(gkpolyspread)
                event_i     "i", 1, 0, p3, ip4, i(gkpolynum)

if (inum < i(gkpolynum)) then
inum            =           inum + 1
goto generate
endif
                endin 
</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>


gik             ftgen       1, 0 ,8192, 10, 1


opcode hilbshift, a, akk

ain, kfreq, kside xin 


areal, aimag    hilbert     ain

asin            oscili      1, kfreq, 1
acos            oscili      1, kfreq, 1, .25

amod1           =           areal * acos
amod2           =           aimag * asin

aupshift        =           (amod1 + amod2) 
adownshift      =           (amod1 - amod2) 

if kside == 1 goto hi
aout            =           adownshift

goto outer

hi:

aout            =           aupshift 
outer:

                xout        aout

endop 



                instr 1

kpi             =           gkpitchshift 


aOri1,aOri2     sampler     [snd],1,p4


aProc1 hilbshift aOri1, kpi*p4, gkside
aProc2 hilbshift aOri2, kpi*p4, gkside


kMix            port        gkmix*0.01, 0.05

aGauche         =           ((aProc1*kMix)+(aOri1*(1-kMix)))*gkenv
aDroite         =           ((aProc2*kMix)+(aOri2*(1-kMix)))*gkenv

aGauche         =           aGauche * .05 / (ampdb(p5)/10)
aDroite         =           aDroite *.05/ (ampdb(p5)/10)


                outs        aGauche, aDroite

                endin


                instr 2


ktrig           changed     gkpolynum,gkpolyspread
if ktrig = 1 then
                turnoff2    1,0,.5
                reinit      pass
endif
pass:

inum            =           0

generate:
ip4             random      1-i(gkpolyspread), 1+i(gkpolyspread)
                event_i     "i", 1, 0, p3, ip4, i(gkpolynum)

if (inum < i(gkpolynum)) then
inum            =           inum + 1
goto generate
endif
                endin 
</Stereo>


<CsoundScore>
;#   p1   p2   p3             
i    2    0    [total_time]          
</CsoundScore>


<PythonScore>

import random


dd=getUserValue("voi")
ee=getUserValue("startsp")

for i in range(1,getUserValue("no_of_grains")+2):


    forInst(1)

    p2 = random.uniform(0, ee)
    p3 = "[total_time]"
    p4 = random.uniform(1-dd, 1+dd)




</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
