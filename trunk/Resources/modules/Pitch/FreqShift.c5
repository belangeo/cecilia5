class Module(BaseModule):
    """
    Frequency shifter module
    
    Sliders under the graph:
    
        - Frequency Shift : Frequency shift value
        - Dry / Wet : Mix between the original signal and the shifted signals
    
    Dropdown menus, toggles and sliders on the bottom left:
    
        - # of Voices : Number of voices played simultaneously (polyphony), only available at initialization time
        - Polyphony Spread : Pitch variation between voices (chorus), only available at initialization time
    
    Graph only parameters :
    
        - Overall Amplitude : The amplitude curve applied on the total duration of the performance
    """
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addSampler("snd")
        self.fs = Hilbert(input=self.snd)
        self.quad = Sine(self.shift, [0, 0.25])
        self.mod1 = self.fs['real']*self.quad[0]
        self.mod2 = self.fs['imag']*self.quad[1]
        self.up = self.mod1-self.mod2
        self.out = Interp(self.snd, self.up, self.drywet, mul=self.env)

Interface = [   csampler(name="snd"), 
                cgraph(name="env", label="Overall Amplitude", func=[(0,1),(1,1)], col="blue"),
                cslider(name="shift", label="Frequency Shift", min=0, max=2000, init=500, rel="lin", unit="Hertz", col="lightgreen"),
                cslider(name="drywet", label="Dry / Wet", min=0, max=1, init=1, rel="lin", unit="x", col="blue"),
                cpoly()
          ]