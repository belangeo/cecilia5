<CeciliaInterface>
csampler snd -label Audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func "0 0 .001 1 .999 1 1 0"
cgraph env1 -label Envelope 1 -min 0 -max 1 -col green -func "0 0 .001 1 .999 1 1 0"
cgraph env2 -label Envelope 2 -min 0 -max 1 -col blue -func "0 0 .001 1 .999 1 1 0"
cgraph env3 -label Envelope 3 -min 0 -max 1 -col red -func "0 0 .001 1 .999 1 1 0"
cgraph env4 -label Envelope 4 -min 0 -max 1 -col orange -func "0 0 .001 1 .999 1 1 0"
cgraph env5 -label Envelope 5 -min 0 -max 1 -col forestgreen -func "0 0 .001 1 .999 1 1 0"
ctoggle sw1 -label Voice 1 -init 1  -col olivegreen
ctoggle sw2 -label Voice 2 -init 1  -col royalblue
ctoggle sw3 -label Voice 3 -init 1 -col khaki
ctoggle sw4 -label Voice 4 -init 1 -col lightblue
ctoggle sw5 -label Voice 5 -init 1 -col lightgreen
cslider xtrans1 -label Transpo 1 -unit cents -rel lin -ori h -res int -min -4800 -max 4800 -init 0 -col olivegreen
cslider xtrans2 -label Transpo 2 -unit cents -rel lin -ori h -res int -min -4800 -max 4800 -init 10 -col royalblue
cslider xtrans3 -label Transpo 3 -unit cents -rel lin -ori h -res int -min -4800 -max 4800 -init 400 -col khaki
cslider xtrans4 -label Transpo 4 -unit cents -rel lin -ori h -res int -min -4800 -max 4800 -init -300 -col lightblue
cslider xtrans5 -label Transpo 5 -unit cents -rel lin -ori h -res int -min -4800 -max 4800 -init -800 -col lightgreen
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>

               instr 1

if p5 = 1 goto first
if p5 = 2 goto second
if p5 = 3 goto third
if p5 = 4 goto fourth
if p5 = 5 goto fifth

first:
krap           =          gkxtrans1
kenv           =          gkenv1

if gksw1 = 0 goto outerend
goto outer

second:
krap           =          gkxtrans2
kenv           =          gkenv2

if gksw2 = 0 goto outerend
goto outer

third:
kenv           =          gkenv3
krap           =          gkxtrans3
if gksw3 = 0 goto outerend
goto outer

fourth:
kenv           =          gkenv4
krap           =          gkxtrans4
if gksw4 = 0 goto outerend
goto outer

fifth:
kenv           =          gkenv5
krap           =          gkxtrans5
if gksw5 = 0 goto outerend
goto outer

outer:
ktrans         =          cent(krap)
aProc1  sampler    [snd],kenv,ktrans

aGauche        =          aProc1 * gkenv



houba:
               out       aGauche*0.1

outerend:

               endin
</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
               instr 1

if p5 = 1 goto first
if p5 = 2 goto second
if p5 = 3 goto third
if p5 = 4 goto fourth
if p5 = 5 goto fifth

first:
krap           =          gkxtrans1
kenv           =          gkenv1

if gksw1 = 0 goto outerend
goto outer

second:
krap           =          gkxtrans2
kenv           =          gkenv2

if gksw2 = 0 goto outerend
goto outer

third:
kenv           =          gkenv3
krap           =          gkxtrans3
if gksw3 = 0 goto outerend
goto outer

fourth:
kenv           =          gkenv4
krap           =          gkxtrans4
if gksw4 = 0 goto outerend
goto outer

fifth:
kenv           =          gkenv5
krap           =          gkxtrans5
if gksw5 = 0 goto outerend
goto outer

outer:
ktrans         =          cent(krap)
aProc1,aProc2  sampler    [snd],kenv,ktrans

aGauche        =          aProc1 * gkenv
aDroite        =          aProc2 * gkenv



               outs       aGauche*0.1, aDroite*0.1

outerend:

               endin
</Stereo>


<CsoundScore>
;#   p1   p2   p3              p4    p5   
f    1    0    8192            10    1    
i    1    0    [total_time]    1     1    
i    1    0    [total_time]    1     2    
i    1    0    [total_time]    1     3    
i    1    0    [total_time]    1     4    
i    1    0    [total_time]    1     5    



</CsoundScore>


<PythonScore>

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
