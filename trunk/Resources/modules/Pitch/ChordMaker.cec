class Module(BaseModule):
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addFilein("snd")
        self.phasor = Phasor(freq=self.snd.getRate())
        self.transpo = Pointer(self.snd, self.phasor, mul=1)
        self.out = self.transpo*self.env

    def setmul(self, order, value):
        muls = self.eqmuls.mul
        muls[order]=value
        self.eqmuls.mul = muls
         
    def onoffv1(self, value):
        self.setmul(0, value)

    def onoffv2(self, value):
        self.setmul(1, value)

    def onoffv3(self, value):
        self.setmul(2, value)

    def onoffv4(self, value):
        self.setmul(3, value)

    def onoffv4(self, value):
        self.setmul(3, value)
            
Interface = [   cfilein(name="snd"), 
                cgraph(name="env", label="Overall Envelope", col="blue"),
                cslider(name="transpo1", label="Transpo Voice 1", min=-4800, max=4800, init=0, rel="lin", unit="cents", col="green"),
                cslider(name="transpo2", label="Transpo Voice 2", min=-4800, max=4800, init=10, rel="lin", unit="cents", col="green"),
                cslider(name="transpo3", label="Transpo Voice 3", min=-4800, max=4800, init=400, rel="lin", unit="cents", col="green"),
                cslider(name="transpo4", label="Transpo Voice 4", min=-4800, max=4800, init=-300, rel="lin", unit="cents", col="green"),
                cslider(name="transpo5", label="Transpo Voice 5", min=-4800, max=4800, init=-800, rel="lin", unit="cents", col="green"),

                ctoggle(name="onoffv1", label="Voice 1", init=1, col="green"),
                ctoggle(name="onoffv2", label="Voice 2", init=1, col="blue"),
                ctoggle(name="onoffv3", label="Voice 3", init=1, col="orange"),
                ctoggle(name="onoffv4", label="Voice 4", init=1, col="lightblue"),
                ctoggle(name="onoffv5", label="Voice 5", init=1, col="lightgreen"),
                cpoly()
          ]

