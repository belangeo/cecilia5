class Module(BaseModule):
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addSampler("snd")
        self.frqrnd = Randi(min=1.0-self.polyphony_spread, max=1.0+self.polyphony_spread, freq=[self.speed for i in range(self.number_of_voices*2)],
                            mul=self.centerfreq)
        self.phaser = Phaser(input=self.snd, freq=self.frqrnd, spread=self.spread, q=self.fq, feedback=self.fb, num=int(self.stages_value),
                                mul=0.5/self.number_of_voices)
        self.out = Interp(self.snd, self.phaser, self.drywet, mul=self.env)

Interface = [   csampler(name="snd"), 
                cgraph(name="env", label="Overall Amplitude", func=[(0,1),(1,1)], col="blue"),
                cslider(name="centerfreq", label="Center Freq", min=20, max=20000, init=400, func=[(0,20),(1,20000)], rel="log", unit="Hertz", col="lightblue"),
                cslider(name="fq", label="Q Factor", min=0.5, max=10, init=5, rel="lin", unit="Q", col="orange"),
                cslider(name="spread", label="Notch Spread", min=0.01, max=1, init=1, rel="lin", unit="x", col="lightblue"),
                cslider(name="fb", label="Feedback", min=0, max=0.999, init=0.7, rel="lin", unit="x", col="orange"),
                cslider(name="speed", label="Chorus Speed", min=0.001, max=200, init=4, rel="log", unit="Hertz", col="lightgreen"),
                cslider(name="drywet", label="Dry / Wet", min=0, max=1, init=0.8, rel="lin", unit="x", col="blue"),
                cpopup(name="stages", label="Number of Stages", init="8", rate="i", col="grey", value=["1","2","3","4","5","6","7","8","9","10","11","12"]),
                cpoly(min=1, max=4, init=1)
          ]