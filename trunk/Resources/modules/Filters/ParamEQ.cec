class Module(BaseModule):
    """
    Parametric equalization filter
    
    Sliders under the graph:
    
        - Freq 1 : Center frequency of the first EQ
        - Freq 1 Q : Q factor of the first EQ
        - Freq 1 Boost/Cut : Gain of the first EQ
        - Freq 2 : Center frequency of the second EQ
        - Freq 2 Q : Q factor of the second EQ
        - Freq 2 Boost/Cut : Gain of the second EQ
        - Freq 3 : Center frequency of the third EQ
        - Freq 3 Q : Q factor of the third EQ
        - Freq 3 Boost/Cut : Gain of the third EQ
        - Freq 4 : Center frequency of the fourth EQ
        - Freq 5 Q : Q factor of the fourth EQ
        - Freq 5 Boost/Cut : Gain of the fourth EQ
    
    Dropdown menus, toggles and sliders on the bottom left:
    
        - EQ Type 1 : EQ type of the first EQ
        - EQ Type 2 : EQ type of the second EQ
        - EQ Type 3 : EQ type of the third EQ
        - EQ Type 4 : EQ type of the fourth EQ
        - # of Voices : Number of voices played simultaneously (polyphony), only available at initialization time
        - Polyphony Spread : Pitch variation between voices (chorus), only available at initialization time
    
    Graph only parameters :
    
        - Overall Amplitude : The amplitude curve applied on the total duration of the performance
    
    """
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addSampler("snd")
        self.eq1 = EQ(self.snd, freq=self.freq1, q=self.freq1q, boost=self.freq1gain, type=self.eq1type_index)
        self.eq2 = EQ(self.eq1, freq=self.freq2, q=self.freq2q, boost=self.freq2gain, type=self.eq2type_index)
        self.eq3 = EQ(self.eq2, freq=self.freq3, q=self.freq3q, boost=self.freq3gain, type=self.eq3type_index)
        self.out = EQ(self.eq3, freq=self.freq4, q=self.freq4q, boost=self.freq4gain, type=self.eq4type_index, mul=self.env)

    def eq1type(self, index, value):
        self.eq1.type = index
    
    def eq2type(self, index, value):
        self.eq2.type = index

    def eq3type(self, index, value):
        self.eq3.type = index

    def eq4type(self, index, value):
        self.out.type = index

Interface = [   csampler(name="snd"), 
                cgraph(name="env", label="Overall Amplitude", func=[(0,1),(1,1)], col="blue"),
                cslider(name="freq1", label="Freq 1", min=1, max=20000, init=500, rel="log", unit="Hertz", col="blue"),
                cslider(name="freq1q", label="Freq 1 Q", min=0.5, max=10, init=0.707, rel="lin", unit="x", col="royalblue"),
                cslider(name="freq1gain", label="Freq 1 Boost/Cut", min=-48, max=18, init=-3, rel="lin", unit="dB", col="lightblue"),
                cslider(name="freq2", label="Freq 2", min=1, max=20000, init=1000, rel="log", unit="Hertz", col="blue"),
                cslider(name="freq2q", label="Freq 2 Q", min=0.5, max=10, init=0.707, rel="lin", unit="x", col="royalblue"),
                cslider(name="freq2gain", label="Freq 2 Boost/Cut", min=-48, max=18, init=-3, rel="lin", unit="dB", col="lightblue"),
                cslider(name="freq3", label="Freq 3", min=1, max=20000, init=1500, rel="log", unit="Hertz", col="blue"),
                cslider(name="freq3q", label="Freq 3 Q", min=0.5, max=10, init=0.707, rel="lin", unit="x", col="royalblue"),
                cslider(name="freq3gain", label="Freq 3 Boost/Cut", min=-48, max=18, init=-3, rel="lin", unit="dB", col="lightblue"),
                cslider(name="freq4", label="Freq 4", min=1, max=20000, init=2000, rel="log", unit="Hertz", col="blue"),
                cslider(name="freq4q", label="Freq 4 Q", min=0.5, max=10, init=0.707, rel="lin", unit="x", col="royalblue"),
                cslider(name="freq4gain", label="Freq 4 Boost/Cut", min=-48, max=18, init=-3, rel="lin", unit="dB", col="lightblue"),
                cpopup(name="eq1type", label="EQ 1 Type", init="Lowshelf", col="grey", value=["Peak/Notch", "Lowshelf", "Highshelf"]),
                cpopup(name="eq2type", label="EQ 2 Type", init="Peak/Notch", col="orange", value=["Peak/Notch", "Lowshelf", "Highshelf"]),
                cpopup(name="eq3type", label="EQ 3 Type", init="Peak/Notch", col="grey", value=["Peak/Notch", "Lowshelf", "Highshelf"]),
                cpopup(name="eq4type", label="EQ 4 Type", init="Highshelf", col="orange", value=["Peak/Notch", "Lowshelf", "Highshelf"]),
                cpoly()
          ]

