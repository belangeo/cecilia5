<CeciliaInterface>
csampler snd -label Audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func 0 0 .000001 1 .99 1 1 0 
cslider centmult -label Center Frequency -unit Hz -rel log -min 10 -max 20000 -init 2500  -col green
cslider reso -label Resonance -unit x -min .01   -max 500  -init 5  -rel log -col green
cslider modepth -label Mod Depth -unit x -rel log -min 0.001 -max 10 -init .8  -col royalblue
cslider modhz -label Mod Frequency -unit Hz -rel log -min .001 -max 100 -init 12  -col royalblue
cslider mix -label Dry / Wet -res float -min 0 -max 100 -unit %  -init 100 -ori v -col blue
ctoggle balance -label Restore Amp -init 1 -col green
cpopup name -label Filter -value lowpass highpass bandpass notch -init lowpass -col green
cpopup type -label Mod Wave -value sine square saw ramp samp&hold -init square -col royalblue
cpopup fol -label Follow Param -value None ModSpeed ModDepth CentralFreq  -init None -col red
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>

gia                      ftgen       100, 0, 8193, 10, 1
gib                      ftgen       13, 0, 8193, 7, 0, 5, -1, 4081, -1, 10, 1, 4081, 1, 5, 0
gic                      ftgen       14, 0, 8193, 7, -1, 5, 1, 8187, -1
gid                      ftgen       15, 0, 8193, 7, -1, 5, -1, 8187, 1

                         opcode      varifilter, a, akkkk
ain, kfreq, kres, ktype, kbal xin 

ahi, alow, aband,anotch  statevar    ain, kfreq, kres, 100

if ktype == 1 goto hi
if ktype == 2 goto band
if ktype == 3 goto rej

aout                     =           alow
goto outer
hi:
aout                     =           ahi
goto outer
band:
aout                     =           aband
goto outer
rej:
aout                     =           anotch
outer:
if kbal == 0 goto nobal
aout                     balance     aout, ain
nobal:
                         xout        aout
endop

                         instr 1 

aOri1,aOri2              sampler     [snd],1,1

kcent                    =           octcps(gkcentmult)
kmodep                   =           (kcent*gkmodepth)*.5
kreso                    =           gkreso
kfree                    follower    aOri1

if (gkfol == 0) then
kmodhz                   =           gkmodhz
kmodep                   =           gkmodepth 

elseif (gkfol == 1) then
kmodhz                   =           gkmodhz*kfree
kmodep                   =           gkmodepth 

elseif (gkfol == 2) then
kmodhz                   =           gkmodhz 
kmodep                   =           gkmodepth*kfree 

elseif (gkfol == 3) then
kmodhz                   =           gkmodhz 
kmodep                   =           gkmodepth 
kcent                    =           kcent*(kfree+(gkmult*0.5)) 
endif

kran                     randomi     .9,1.1,0.3
kran2                    randomi     .85,1.75,0.23

kmod1                    oscili      kmodep, kmodhz*kran, 100 
kmod2                    oscili      kmodep, kmodhz*kran, 13 
kmod3                    oscili      kmodep, kmodhz*kran, 14 
kmod4                    oscili      kmodep, kmodhz*kran, 15 
kmod5                    randh       kmodep, kmodhz*kran, .365

if gktype == 0 goto sine 
if gktype == 1 goto square 
if gktype == 2 goto saw 
if gktype == 3 goto ramp 
if gktype == 4 goto randip 

sine: 
kmodd                    =           kmod1
goto filt
square:
kmodd                    =           kmod2
goto filt
saw:
kmodd                    =           kmod3
goto filt
ramp:
kmodd                    =           kmod4
goto filt 
randip: 
kmodd                    =           kmod5 

filt: 
kmodd                    =           cpsoct(kmodd+kcent)
kfr                      limit       kmodd, 30, sr/4
kfr                      port        kfr, .0015 

aProc1 varifilter aOri1, kfr, kreso, gkname, gkbalance

kMix                     port        gkmix*0.01, 0.05

aGauche                  =           ((aProc1*kMix)+(aOri1*(1-kMix)))*gkenv

aGauche                  dcblock     aGauche

                         out        aGauche*0.2 
                         endin
</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
gia                      ftgen       100, 0, 8193, 10, 1
gib                      ftgen       13, 0, 8193, 7, 0, 5, -1, 4081, -1, 10, 1, 4081, 1, 5, 0
gic                      ftgen       14, 0, 8193, 7, -1, 5, 1, 8187, -1
gid                      ftgen       15, 0, 8193, 7, -1, 5, -1, 8187, 1

                         opcode      varifilter, a, akkkk
ain, kfreq, kres, ktype, kbal xin 

ahi, alow, aband,anotch  statevar    ain, kfreq, kres, 100

if ktype == 1 goto hi
if ktype == 2 goto band
if ktype == 3 goto rej

aout                     =           alow
goto outer
hi:
aout                     =           ahi
goto outer
band:
aout                     =           aband
goto outer
rej:
aout                     =           anotch
outer:
if kbal == 0 goto nobal
aout                     balance     aout, ain
nobal:
                         xout        aout
endop

                         instr 1 

aOri1,aOri2              sampler     [snd],1,1

kcent                    =           octcps(gkcentmult)
kmodep                   =           (kcent*gkmodepth)*.5
kreso                    =           gkreso
kfree                    follower    aOri1

if (gkfol == 0) then
kmodhz                   =           gkmodhz
kmodep                   =           gkmodepth 

elseif (gkfol == 1) then
kmodhz                   =           gkmodhz*kfree
kmodep                   =           gkmodepth 

elseif (gkfol == 2) then
kmodhz                   =           gkmodhz 
kmodep                   =           gkmodepth*kfree 

elseif (gkfol == 3) then
kmodhz                   =           gkmodhz 
kmodep                   =           gkmodepth 
kcent                    =           kcent*(kfree+(gkmult*0.5)) 
endif

kran                     randomi     .9,1.1,0.3
kran2                    randomi     .85,1.75,0.23

kmod1                    oscili      kmodep, kmodhz*kran, 100 
kmod2                    oscili      kmodep, kmodhz*kran, 13 
kmod3                    oscili      kmodep, kmodhz*kran, 14 
kmod4                    oscili      kmodep, kmodhz*kran, 15 
kmod5                    randh       kmodep, kmodhz*kran, .365

if gktype == 0 goto sine 
if gktype == 1 goto square 
if gktype == 2 goto saw 
if gktype == 3 goto ramp 
if gktype == 4 goto randip 

sine: 
kmodd                    =           kmod1
goto filt
square:
kmodd                    =           kmod2
goto filt
saw:
kmodd                    =           kmod3
goto filt
ramp:
kmodd                    =           kmod4
goto filt 
randip: 
kmodd                    =           kmod5 

filt: 
kmodd                    =           cpsoct(kmodd+kcent)
kfr                      limit       kmodd, 30, sr/4
kfr                      port        kfr, .0015 

aProc1 varifilter aOri1, kfr, kreso, gkname, gkbalance
aProc2 varifilter aOri2, kfr, kreso, gkname, gkbalance

kMix                     port        gkmix*0.01, 0.05

aGauche                  =           ((aProc1*kMix)+(aOri1*(1-kMix)))*gkenv
aDroite                  =           ((aProc2*kMix)+(aOri2*(1-kMix)))*gkenv

aGauche                  dcblock     aGauche
aDroite                  dcblock     aDroite 

                         outs        aGauche*0.2, aDroite*0.2

                         endin
</Stereo>


<CsoundScore>
;#   p1   p2   p3              
i    1    0    [total_time]    
</CsoundScore>


<PythonScore>

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
