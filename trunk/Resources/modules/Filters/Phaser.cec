<CeciliaInterface>
csampler snd -label Audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func 0 0 .00001 1 .99 1 1 0
cslider freq -label Center Frequency  -min 10 -max 15000 -init 200 -rel log -col red
cslider q -label Q Factor -min .1 -max 5 -init .5 -rel log -col red
cslider sep -label Notch Spread  -min .005 -max 5 -init 1.1 -col red
cslider feed -label Feedback  -min .005 -max .999 -init .85 -col red
cslider mix -label Dry / Wet -res float -min 0 -max 100 -unit % -init 50 -col blue
cslider ord -label Number of Stages -res int -rate k -res int -min 1 -max 20 -init 5 -gliss 0 -up 1
cpoly poly -label voices -min 1 -max 10 -init 1
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>




                instr 1 



aOri1,aOri2     sampler     [snd], 1,p4


ktrig           changed     gkord
if ktrig = 1 then
                reinit      pass
endif

pass:



aProc1          phaser2     aOri1, gkfreq*p4, gkq, i(gkord), 2, gksep, gkfeed 

rireturn

kdrymix         =           gkmix*0.01

aGauche         =           ((aProc1*kdrymix)+(aOri1*(1-kdrymix)))*gkenv

                out       aGauche*0.3



                endin



         instr 2


ktrig       changed     gkpolynum,gkpolyspread
if ktrig = 1 then
            turnoff2    1,0,.5
            reinit      pass
endif
pass:

inum        =           0

generate:
ip4         random      1-i(gkpolyspread), 1+i(gkpolyspread)
            event_i     "i", 1, 0, p3, ip4

if (inum <= i(gkpolynum)) then
inum        =           inum + 1
goto generate
endif
            endin
</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>




                instr 1 



aOri1,aOri2     sampler     [snd] ,1,p4


ktrig           changed     gkord
if ktrig = 1 then
                reinit      pass
endif

pass:



aProc1          phaser2     aOri1, gkfreq*p4, gkq, i(gkord), 2, gksep, gkfeed 
aProc2          phaser2     aOri2, gkfreq*p4, gkq, i(gkord), 2, gksep, gkfeed 

rireturn

kdrymix         =           gkmix*0.01

aGauche         =           ((aProc1*kdrymix)+(aOri1*(1-kdrymix)))*gkenv
aDroite         =           ((aProc2*kdrymix)+(aOri2*(1-kdrymix)))*gkenv

                outs        aGauche*0.3, aDroite*0.3



                endin



         instr 2


ktrig       changed     gkpolynum,gkpolyspread
if ktrig = 1 then
            turnoff2    1,0,.5
            reinit      pass
endif
pass:

inum        =           0

generate:
ip4         random      1-i(gkpolyspread), 1+i(gkpolyspread)
            event_i     "i", 1, 0, p3, ip4

if (inum <= i(gkpolynum)) then
inum        =           inum + 1
goto generate
endif
            endin
</Stereo>


<CsoundScore>
;#   p1   p2   p3              p4    p5   
f    1    0    8192            10    1    

i    2    0    [total_time]    
</CsoundScore>


<PythonScore>

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
