class Module(BaseModule):
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addSampler("snd")
        self.lfomod = LFO(freq=self.modfreq, sharp=1, type=0, mul=0.5, add=0.5)
        self.lfoamp = 1-self.moddepth
        self.filt = Biquadx(input=self.snd, freq=self.centerfreq*(self.lfomod*self.moddepth+self.lfoamp)+30, q=self.filterq, type=0, stages=2, mul=0.7)
        self.mixxx = Selector(inputs=[self.snd,self.filt], voice=self.drywet)
        self.out = self.mixxx*self.env
    
    def filttype(self, index, value):
        self.filt.type = index
        
    def modtype(self, index, value):
        self.lfomod.type = index
            
Interface = [   csampler(name="snd"), 
                cgraph(name="env", label="Overall Envelope", col="blue"),
                cslider(name="centerfreq", label="Center Freq", min=20, max=20000, init=2000, rel="log", unit="Hertz", col="forestgreen"),
                cslider(name="filterq", label="Resonance", min=1, max=10, init=1, rel="lin", unit="Q", col="olivegreen"),
                cslider(name="moddepth", label="Mod Depth", min=0.001, max=1, init=0.5, rel="lin", unit="x", col="marineblue"),
                cslider(name="modfreq", label="Mod Freq", min=0.01, max=2000, init=1, rel="log", unit="Hertz", col="royalblue"),
                cslider(name="drywet", label="Dry / Wet", min=0, max=1, init=1, rel="lin", unit="x", col="lightblue"),
                cpopup(name="filttype", label="Filter Type", init="Lowpass", col="chorusyellow", value=["Lowpass","Highpass","Bandpass","Bandstop"]),
                cpopup(name="modtype", label="Mod Type", init="Triangle", col="grey", value=["Saw Up", "Saw Down", "Square", "Triangle", "Pulse", "Bipolar Pulse",
                            "Sample and Hold", "Modulated Sine"]),
                cpoly()
          ]