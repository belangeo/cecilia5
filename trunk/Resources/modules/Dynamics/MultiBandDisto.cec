<CeciliaInterface>
;cmodule dump -label Apply multiple arc tangent distortions with control over the frequency regions.

csampler snd -label Audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func 0 0 .001 1 .999 1 1 0
cgraph freq1 -label Frequency 1 -unit Hz -rel log -min 20 -max 15000 -init 100 -col royalblue
cgraph freq2 -label Frequency 2 -unit Hz -rel log -min 20 -max 15000 -init 500 -col royalblue
cgraph freq3 -label Frequency 3 -unit Hz -rel log -min 20 -max 15000 -init 1500 -col royalblue
cgraph freq4 -label Frequency 4 -unit Hz -rel log -min 20 -max 15000 -init 5000 -col royalblue
cslider drv1 -label Drive Freq 1 -res float -min 0 -max 100 -init 75 -unit % -col forestgreen
cslider drv2 -label Drive Freq 2 -res float -min 0 -max 100 -init 75 -unit % -col forestgreen
cslider drv3 -label Drive Freq 3 -res float -min 0 -max 100 -init 75 -unit % -col forestgreen
cslider drv4 -label Drive Freq 4 -res float -min 0 -max 100 -init 75 -unit % -col forestgreen
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>

opcode disto, a, akkki
ain, kfreq, kdrv, kdrive, itype xin 

kslope      =               .4-(kdrv*.3999*kdrive)
aslope      upsamp          kslope
kamp        pow             (kslope+.6), 2


if itype == 0 goto low
if itype == 1 goto band
if itype == 2 goto high

low:
afilt       tonex           ain, kfreq,4
goto outer

band:
afilt       resonx          ain, kfreq, kfreq/2,4,1
goto outer

high:
afilt       atonex          ain, kfreq,4

outer:
adist       taninv2         afilt/32768, aslope 
            xout            adist * kamp
endop 

            instr 1

aOri1       sampler         [snd],1,p4

adist1l disto aOri1, gkfreq1, gkdrv1*0.01, 1, 0

adist2l disto aOri1, gkfreq2, gkdrv2*0.01, 1, 1

adist3l disto aOri1, gkfreq3, gkdrv3*0.01, 1, 1

adist4l disto aOri1, gkfreq4, gkdrv4*0.01, 1, 2

aProc1      =               (adist1l+adist2l+adist3l+adist4l)*32768


outeur:
aGauche     =               aProc1*gkenv

aGauche     dcblock2        aGauche

            out             aGauche*0.5

            endin

</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
opcode disto, a, akkki
ain, kfreq, kdrv, kdrive, itype xin 

kslope          =               .4-(kdrv*.3999*kdrive)
aslope          upsamp          kslope
kamp            pow             (kslope+.6), 2


if itype == 0 goto low
if itype == 1 goto band
if itype == 2 goto high

low:
afilt           tonex           ain, kfreq,4
goto outer

band:
afilt           resonx          ain, kfreq, kfreq/2,4,1
goto outer

high:
afilt           atonex          ain, kfreq,4

outer:
adist           taninv2         afilt/32768, aslope 
                xout            adist * kamp
endop 



                instr 1

aOri1,aOri2     sampler         [snd],1,p4

adist1l disto aOri1, gkfreq1, gkdrv1*0.01, 1, 0
adist1r disto aOri2, gkfreq1, gkdrv1*0.01, 1, 0

adist2l disto aOri1, gkfreq2, gkdrv2*0.01, 1, 1
adist2r disto aOri2, gkfreq2, gkdrv2*0.01, 1, 1

adist3l disto aOri1, gkfreq3, gkdrv3*0.01, 1, 1
adist3r disto aOri2, gkfreq3, gkdrv3*0.01, 1, 1

adist4l disto aOri1, gkfreq4, gkdrv4*0.01, 1, 2
adist4r disto aOri2, gkfreq4, gkdrv4*0.01, 1, 2 

aProc1          =               (adist1l+adist2l+adist3l+adist4l)*32768
aProc2          =               (adist1r+adist2r+adist3r+adist4r)*32768

outeur:
aGauche         =               aProc1*gkenv
aDroite         =               aProc2*gkenv

aGauche         dcblock2        aGauche
aDroite         dcblock2        aDroite

                outs            aGauche*0.5, aDroite*0.5

                endin

</Stereo>


<CsoundScore>
;#   p1   p2       p3              p4    p5   
f    2    0        8192            10    1    

i    1    0.001    [total_time]    1     

</CsoundScore>


<PythonScore>

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
