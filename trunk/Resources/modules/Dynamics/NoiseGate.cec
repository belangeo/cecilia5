<CeciliaInterface>
csampler snd -label Audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -func 0 0 .01 1 .99 1 1 0
cslider thresh -label Threshold -min 0 -max 30000 -init 1000 -unit x -col red
cslider rampup -label Up ramp -min 0.001 -max 1 -init 0.01 -rel log -unit sec -col blue
cslider rampdown -label Down ramp -min 0.001 -max 1 -init 0.1 -rel log -unit sec -col blue
cpoly poly -label voices -min 1 -max 10 -init 1
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>
opcode gater, a,akkk
asig, kthresh, krampup, krampdown xin 

krms    rms      asig     
kng     =        (krms>kthresh?1:0)
if (kng == 1) then
kramp = krampup
else
kramp = krampdown
endif

kng     portk    kng,kramp
        xout     asig*kng
endop


                instr 1

aOri1     sampler         [snd],1,p4


aGauche gater aOri1, gkthresh, gkrampup, gkrampdown

aGauche         =               aGauche * 0.25 * gkenv / (ampdb(p5)/10)

                out            aGauche

                endin


                instr 2


ktrig           changed         gkpolynum,gkpolyspread
if ktrig == 1 then
                turnoff2        1,0,.5
                reinit          pass
endif
pass:

inum            =               0

generate:
ip4             random          1-i(gkpolyspread), 1+i(gkpolyspread)
                event_i         "i", 1, 0, p3, ip4, i(gkpolynum)+1

if (inum < i(gkpolynum)) then
inum            =               inum + 1
goto generate
endif
                endin

</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>

opcode gater, a,akkk
asig, kthresh, krampup, krampdown xin 

krms    rms      asig     
kng     =        (krms>kthresh?1:0)
if (kng == 1) then
kramp = krampup
else
kramp = krampdown
endif

kng     portk    kng,kramp
        xout     asig*kng
endop


                instr 1

aOri1,aOri2     sampler         [snd],1,p4


aGauche gater aOri1, gkthresh, gkrampup, gkrampdown
aDroite gater aOri2, gkthresh, gkrampup, gkrampdown

aGauche         =               aGauche * 0.25 * gkenv / (ampdb(p5)/10)
aDroite         =               aDroite * 0.25 * gkenv / (ampdb(p5)/10)

                outs            aGauche,aDroite

                endin


                instr 2


ktrig           changed         gkpolynum,gkpolyspread
if ktrig == 1 then
                turnoff2        1,0,.5
                reinit          pass
endif
pass:

inum            =               0

generate:
ip4             random          1-i(gkpolyspread), 1+i(gkpolyspread)
                event_i         "i", 1, 0, p3, ip4, i(gkpolynum)+1

if (inum < i(gkpolynum)) then
inum            =               inum + 1
goto generate
endif
                endin

</Stereo>


<CsoundScore>
i2    0    [total_time]    
</CsoundScore>


<PythonScore>

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
