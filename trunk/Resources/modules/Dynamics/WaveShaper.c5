class Module(BaseModule):
    """
    Waveshaping module
    
    Sliders under the graph:
    
        - Filter Freq : Center frequency of the filter
        - Filter Q : Q factor of the filter
    
    Dropdown menus, toggles and sliders on the bottom left:
    
        - Filter Type : Type of filter
        - # of Voices : Number of voices played simultaneously (polyphony), only available at initialization time
        - Polyphony Spread : Pitch variation between voices (chorus), only available at initialization time
    
    Graph only parameters :
    
        - Transfer Function : Table used for waveshaping
        - Overall Amplitude : The amplitude curve applied on the total duration of the performance
    """
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addSampler("snd")
        self.lookup = Lookup(self.function, self.snd)
        self.lookdc = DCBlock(self.lookup)
        self.out = Biquadx(self.lookdc, freq=self.cut, q=self.filterq, type=self.filttype_index, stages=4, mul=0.4*self.env)
        
    def filttype(self, index, value):
        self.out.type = index

Interface = [   csampler(name="snd"),
                cgraph(name="env", label="Overall Amplitude", func=[(0,1),(1,1)], col="blue"), 
                cgraph(name="function", label="Transfer Function", func=[(0,1),(0.5,1),(0.501,0),(1,0)], table=True, col="blue"),
                cslider(name="cut", label="Filter Freq", min=100, max=18000, init=7000, rel="log"),
                cslider(name="filterq", label="Filter Q", min=0.5, max=10, init=0.707, rel="log", unit="Q", col="tan"),
                cpopup(name="filttype", label="Filter Type", init="Lowpass", col="tan", value=["Lowpass","Highpass","Bandpass","Bandstop"]),
                cpoly()
            ]
