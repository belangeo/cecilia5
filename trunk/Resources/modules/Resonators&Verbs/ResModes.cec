<CeciliaInterface>
csampler snd -label Audio In
cgraph env -label Envelope -min 0 -max 1 -col red -func 0 0 .001 1 .999 1 1 0
cslider base -label Base Freq -unit Hz -min 20 -max 5000 -rel log -init 300  -col green
cslider Q -label Resonance -min 10 -max 10000 -rel log -init 1200  -col green
cslider PinkLP -label LoPass -unit dB -min 20 -max 20000 -rel log -init 20000   -col royalblue
cslider PinkHP -label HiPass Freq -unit dB -min 20 -max 20000 -rel log -init 20  -col royalblue
cslider DopRate -label Mod Rate -unit Hz -min 0.001 -max 10 -rel log -init 1 -col orange
cslider DopDep -label Mod Depth -unit x -min 0.0001 -max 0.005 -rel lin -init .001  -col orange  
cslider PanRate -label Pan Rate -unit x -min 0 -max 20 -rel lin -init 3  -col marineblue
cslider PanDep -label Pan Depth -unit x -min 0 -max .5 -rel lin -init 1  -col marineblue 
cslider Mix -label Dry/Wet -unit x -min 0 -max 100 -rel lin -init 100  -col blue
cpopup sound -label Mode -init TubularBell -col green -value single dahina banyan xylophone TibetanBowl Spinel PotLid RedCedarPlate TubularBell RedwoodPlate DouglasFirPlate UniformWoodBar UniformAlumBar Vibraphone1 Vibraphone2 ChalandiPlates TibetanBowl2 TibetanBowl3 WineGlass SmallHandbell 
ctoggle DopOn -label Vibrato -init 1 -col orange
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>
                    zakinit     6,6 ;INITIALISE ZAK SPACE (6 A-RATE AND 6 K-RATE VARIABLES)


;single
girtos1             ftgen       0,0,2, -2, 1,1
;dahina
girtos2             ftgen       0,0,-6,-2, 1, 2.89, 4.95, 6.99, 8.01, 9.02
;banyan
girtos3             ftgen       0,0,-6,-2, 1, 2.0, 3.01, 4.01, 4.69, 5.63
;xylophone
girtos4             ftgen       0,0,-6,-2, 1, 3.932, 9.538, 16.688, 24.566, 31.147
;tibetan bowl (180mm)
girtos5             ftgen       0,0,-7,-2, 1, 2.77828, 5.18099, 8.16289, 11.66063, 15.63801, 19.99
;spinel sphere with diameter of 3.6675mm
girtos6             ftgen       0,0,-24,-2, 1, 1.026513174725, 1.4224916858532, 1.4478690202098, 1.4661959580455, 1.499452545408, 1.7891839345101, 1.8768994627782, 1.9645945254541, 1.9786543873113, 2.0334612432847, 2.1452852391916, 2.1561524686621, 2.2533435661294, 2.2905090816065, 2.3331798413917, 2.4567715528268, 2.4925556408289, 2.5661806088514, 2.6055768738808, 2.6692760296751, 2.7140956766436, 2.7543617293425, 2.7710411870043 
;pot lid
girtos7             ftgen       0,0,-6,-2, 1, 3.2, 6.23, 6.27, 9.92, 14.15
;red cedar wood plate
girtos8             ftgen       0,0,-4,-2, 1, 1.47, 2.09, 2.56
;tubular bell
girtos9             ftgen       0,0,-10,-2, 272/437, 538/437, 874/437, 1281/437, 1755/437, 2264/437, 2813/437, 3389/437, 4822/437, 5255/437,
;redwood wood plate
girtos10            ftgen       0,0,-4,-2, 1, 1.47, 2.11, 2.57
;douglas fir wood plate
girtos11            ftgen       0,0,-4,-2, 1, 1.42, 2.11, 2.47
;uniform wooden bar
girtos12            ftgen       0,0,-6,-2, 1, 2.572, 4.644, 6.984, 9.723, 12
;uniform aluminum bar
girtos13            ftgen       0,0,-6,-2, 1, 2.756, 5.423, 8.988, 13.448, 18.680
;vibraphone 1
girtos14            ftgen       0,0,-6,-2, 1, 3.984, 10.668, 17.979, 23.679, 33.642
;vibraphone 2
girtos15            ftgen       0,0,-6,-2, 1, 3.997, 9.469, 15.566, 20.863, 29.440
;Chalandi plates
girtos16            ftgen       0,0,-5,-2, 1, 1.72581, 5.80645, 7.41935, 13.91935
;tibetan bowl (152 mm)
girtos17            ftgen       0,0,-7,-2, 1, 2.66242, 4.83757, 7.51592, 10.64012, 14.21019, 18.14027
;tibetan bowl (140 mm)
girtos19            ftgen       0,0,-5,-2, 1, 2.76515, 5.12121, 7.80681, 10.78409
;wine glass
girtos19            ftgen       0,0,-5,-2, 1, 2.32, 4.25, 6.63, 9.38
;small handbel
girtos20            ftgen       0,0,-22,-2, 1, 1.0019054878049, 1.7936737804878, 1.8009908536585, 2.5201981707317, 2.5224085365854, 2.9907012195122, 2.9940548780488, 3.7855182926829, 3.8061737804878, 4.5689024390244, 4.5754573170732, 5.0296493902439, 5.0455030487805, 6.0759908536585, 5.9094512195122, 6.4124237804878, 6.4430640243902, 7.0826219512195, 7.0923780487805, 7.3188262195122, 7.5551829268293 
;user definable
girtos21            ftgen       0,0,-24,-2, 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25

;TABLE OF SCALING FACTORS FOR INDIVIDUAL Q VALUES
giQs                ftgen       0,0,32,-2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
;TABLE OF SCALING FACTORS FOR INDIVIDUAL AMP VALUES
giAmps              ftgen       0,0,32,-2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
gisine              ftgen       0,0,131072,10,1




opcode modemoduleL, 0, akiii ;MODE UDO (K-RATE BASE FREQUENCY) - USED FOR NON-MIDI MODE 

ain, kbase, icount, ialgfn, imodes xin 
kQ1                 =           abs(gkQ-10000)+10
krto                table       icount-1, (ialgfn) 
kfrq                =           krto * kbase 

if kfrq>14000||krto=0 goto SKIP 
kQ                  table       icount-1, giQs
kAmp                table       icount-1, giAmps
a1                  mode        ain, kfrq, gkQ*kQ 
                    zawm        a1*kAmp, 0 
icount              =           icount + 1 

if icount <= imodes then 
modemoduleL ain, kbase, icount, ialgfn, imodes 
endif 

SKIP: 

endop 



opcode modemoduleR, 0, akiii 

ain, kbase, icount, ialgfn, imodes xin 

kQ1                 =           abs(gkQ-10000)+10

;printk2 kQ

krto                table       icount-1, (ialgfn) 
kfrq                =           krto * kbase 

if kfrq>14000||krto=0 goto SKIP 
kQ                  table       icount-1, giQs
kAmp                table       icount-1, giAmps
a1                  mode        ain, kfrq, gkQ*kQ 
                    zawm        a1*kAmp, 3 ;
icount              =           icount + 1
if icount <= imodes then 
modemoduleR ain, kbase, icount, ialgfn, imodes ;
endif 

SKIP: 

endop 




opcode modemodulei, 0, aiiii ;MODE UDO (I-RATE BASE FREQUENCY) - USED FOR MIDI MODE 
ain, ibase, icount, ialgfn, imodes xin 


kQ                  =           (gkQ*10000)+10
kQ1                 =           abs(kQ-10000)+10
irto                table       icount-1, (ialgfn) 
ifrq                =           irto * ibase 
if ifrq>14000 goto SKIP 
a1                  mode        ain, ifrq, kQ1 
                    zawm        a1, 0 
icount              =           icount + 1 
if icount <= imodes then 
modemodulei ain, ibase, icount, ialgfn, imodes 
endif 

SKIP: 

endop



opcode dopplerUDO, a, akkkk ;DOPPLER UDO
ain, krate, kDopDep, kPanDep, kpanRate xin 
                    setksmps    1 ;CONTROL RATE WITHIN UDO IS 1
ioffset             init        ksmps/sr 
kdevDop             randomi     .85,1.15,krate*.78 
kdev                randomi     .85,1.15,krate*.68 
adlt                oscil       kDopDep*kdevDop,krate*kdev,gisine 
abuf                delayr      (0.01)+ioffset 
atap                deltap3     adlt+kDopDep+ioffset 
                    delayw      ain 
                    xout        atap

endop 



                    instr 2 
kMix                =           gkMix * .01
kporttime           linseg      0,0.01,0.01 ;CREATE A RAMPING UP ENVELOPE

;GENERATE AN SAMPLER SIGNAL=================================

apulser,apulser2    sampler     [snd],.1
gapulser            =           apulser
gapulser2           =           apulser2
kPinkHP             portk       gkPinkHP, kporttime 
kPinkLP             portk       gkPinkLP, kporttime ;SMOOTH FLTK SLIDER VARIABLE
apulse              butlp       apulser, kPinkLP ;APPLY FILTER TO PINK NOISE SIGNAL
apulse              buthp       apulser, kPinkHP 
apulse2             butlp       apulser2, kPinkLP 
apulse2             buthp       apulser2, kPinkHP 


kbase               portk       gkbase, kporttime 
ktrig               changed     gksound;, gkQ1, gkQ2, gkQ3, gkQ4, gkQ5, gkQ6, gkQ7, gkQ8, gkQ9, gkQ10, gkQ11, gkQ12, gkQ13, gkQ14, gkQ15, gkQ16, gkQ17, gkQ18, gkQ19, gkQ20;, gkQ21, gkQ22, gkQ23, gkQ24, gkQ25, gkQ26, gkQ27, gkQ28, gkQ29, gkQ30, gkQ31, gkQ32 ;IF SOUND CHOICE CHANGES GENERATE A MOMENTARY '1' (BANG)

if ktrig=1 then 
                    reinit      RESTART 
endif 

RESTART: 

ialgfn              init        girtos1+i(gksound)+1 ;MODAL ALGORITHM FUNCTION TABLE NUMBER
imodes              =           ftlen(ialgfn) 
icount              init        1 

                    modemoduleL apulse, kbase*p4, icount, ialgfn, imodes 

aout                zar         0 

aout                =           (aout * .1) / imodes 

                    rireturn    

if gkDopOn=1 then 
a1 dopplerUDO aout, gkDopRate*p4, gkDopDep, gkPanDep , gkPanRate


aouterR = ((a1)*(kMix))+((apulse)*(1-kMix))

                    out        aouterR*0.5*gkenv


                    zawm        aouterR , 1 
                    zawm        aouterR , 4 

else 

aouterR             =           (aout*(kMix))+(apulse*(1-kMix))

                    out        aouterR*0.5*gkenv

                    zawm        aouterR , 1
                    zawm        aouterR , 2 
endif 

                    zacl        0,0 
                    zacl        3,3 

                    endin





ktrig           changed         gkpolynum,gkpolyspread
if ktrig == 1 then
                turnoff2        1,0,.5
                reinit          pass
endif
pass:

inum            =               0

generate:
ip4             random          1-i(gkpolyspread), 1+i(gkpolyspread)
                event_i         "i", 2, 0, p3, ip4, i(gkpolynum)+1

if (inum < i(gkpolynum)) then
inum            =               inum + 1
goto generate
endif
                endin



</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
                    zakinit     6,6 ;INITIALISE ZAK SPACE (6 A-RATE AND 6 K-RATE VARIABLES)



;single
girtos1             ftgen       0,0,2, -2, 1,1
;dahina
girtos2             ftgen       0,0,-6,-2, 1, 2.89, 4.95, 6.99, 8.01, 9.02
;banyan
girtos3             ftgen       0,0,-6,-2, 1, 2.0, 3.01, 4.01, 4.69, 5.63
;xylophone
girtos4             ftgen       0,0,-6,-2, 1, 3.932, 9.538, 16.688, 24.566, 31.147
;tibetan bowl (180mm)
girtos5             ftgen       0,0,-7,-2, 1, 2.77828, 5.18099, 8.16289, 11.66063, 15.63801, 19.99
;spinel sphere with diameter of 3.6675mm
girtos6             ftgen       0,0,-24,-2, 1, 1.026513174725, 1.4224916858532, 1.4478690202098, 1.4661959580455, 1.499452545408, 1.7891839345101, 1.8768994627782, 1.9645945254541, 1.9786543873113, 2.0334612432847, 2.1452852391916, 2.1561524686621, 2.2533435661294, 2.2905090816065, 2.3331798413917, 2.4567715528268, 2.4925556408289, 2.5661806088514, 2.6055768738808, 2.6692760296751, 2.7140956766436, 2.7543617293425, 2.7710411870043 
;pot lid
girtos7             ftgen       0,0,-6,-2, 1, 3.2, 6.23, 6.27, 9.92, 14.15
;red cedar wood plate
girtos8             ftgen       0,0,-4,-2, 1, 1.47, 2.09, 2.56
;tubular bell
girtos9             ftgen       0,0,-10,-2, 272/437, 538/437, 874/437, 1281/437, 1755/437, 2264/437, 2813/437, 3389/437, 4822/437, 5255/437,
;redwood wood plate
girtos10            ftgen       0,0,-4,-2, 1, 1.47, 2.11, 2.57
;douglas fir wood plate
girtos11            ftgen       0,0,-4,-2, 1, 1.42, 2.11, 2.47
;uniform wooden bar
girtos12            ftgen       0,0,-6,-2, 1, 2.572, 4.644, 6.984, 9.723, 12
;uniform aluminum bar
girtos13            ftgen       0,0,-6,-2, 1, 2.756, 5.423, 8.988, 13.448, 18.680
;vibraphone 1
girtos14            ftgen       0,0,-6,-2, 1, 3.984, 10.668, 17.979, 23.679, 33.642
;vibraphone 2
girtos15            ftgen       0,0,-6,-2, 1, 3.997, 9.469, 15.566, 20.863, 29.440
;Chalandi plates
girtos16            ftgen       0,0,-5,-2, 1, 1.72581, 5.80645, 7.41935, 13.91935
;tibetan bowl (152 mm)
girtos17            ftgen       0,0,-7,-2, 1, 2.66242, 4.83757, 7.51592, 10.64012, 14.21019, 18.14027
;tibetan bowl (140 mm)
girtos19            ftgen       0,0,-5,-2, 1, 2.76515, 5.12121, 7.80681, 10.78409
;wine glass
girtos19            ftgen       0,0,-5,-2, 1, 2.32, 4.25, 6.63, 9.38
;small handbel
girtos20            ftgen       0,0,-22,-2, 1, 1.0019054878049, 1.7936737804878, 1.8009908536585, 2.5201981707317, 2.5224085365854, 2.9907012195122, 2.9940548780488, 3.7855182926829, 3.8061737804878, 4.5689024390244, 4.5754573170732, 5.0296493902439, 5.0455030487805, 6.0759908536585, 5.9094512195122, 6.4124237804878, 6.4430640243902, 7.0826219512195, 7.0923780487805, 7.3188262195122, 7.5551829268293 
;user definable
girtos21            ftgen       0,0,-24,-2, 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25

;TABLE OF SCALING FACTORS FOR INDIVIDUAL Q VALUES
giQs                ftgen       0,0,32,-2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
;TABLE OF SCALING FACTORS FOR INDIVIDUAL AMP VALUES
giAmps              ftgen       0,0,32,-2,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
gisine              ftgen       0,0,131072,10,1




opcode modemoduleL, 0, akiii ;MODE UDO (K-RATE BASE FREQUENCY) - USED FOR NON-MIDI MODE 

ain, kbase, icount, ialgfn, imodes xin 
kQ1                 =           abs(gkQ-10000)+10
krto                table       icount-1, (ialgfn) 
kfrq                =           krto * kbase 

if kfrq>14000||krto=0 goto SKIP 
kQ                  table       icount-1, giQs
kAmp                table       icount-1, giAmps
a1                  mode        ain, kfrq, gkQ*kQ 
                    zawm        a1*kAmp, 0 
icount              =           icount + 1 

if icount <= imodes then 
modemoduleL ain, kbase, icount, ialgfn, imodes 
endif 

SKIP: 

endop 



opcode modemoduleR, 0, akiii 

ain, kbase, icount, ialgfn, imodes xin 

kQ                  =           (gkQ*10000)+10
kQ1                 =           abs(kQ-10000)+10

;printk2 kQ

krto                table       icount-1, (ialgfn) 
kfrq                =           krto * kbase 

if kfrq>14000||krto=0 goto SKIP 
kQ                  table       icount-1, giQs
kAmp                table       icount-1, giAmps
a1                  mode        ain, kfrq, gkQ*kQ 
                    zawm        a1*kAmp, 3 ;
icount              =           icount + 1
if icount <= imodes then 
modemoduleR ain, kbase, icount, ialgfn, imodes ;
endif 

SKIP: 

endop 




opcode modemodulei, 0, aiiii ;MODE UDO (I-RATE BASE FREQUENCY) - USED FOR MIDI MODE 
ain, ibase, icount, ialgfn, imodes xin 

kQ1                 =           abs(gkQ-10000)+10
irto                table       icount-1, (ialgfn) 
ifrq                =           irto * ibase 
if ifrq>14000 goto SKIP 
a1                  mode        ain, ifrq, kQ1 
                    zawm        a1, 0 
icount              =           icount + 1 
if icount <= imodes then 
modemodulei ain, ibase, icount, ialgfn, imodes 
endif 

SKIP: 

endop



opcode dopplerUDO, aa, akkkk ;DOPPLER UDO
ain, krate, kDopDep, kPanDep, kpanRate xin 
                    setksmps    1 ;CONTROL RATE WITHIN UDO IS 1
ioffset             init        ksmps/sr 
kdevDop             randomi     .65,1.55,krate*.78 
kdev                randomi     .75,1.45,krate*.68 
adlt                oscil       kDopDep*kdevDop,krate*kdev,gisine 
kpan                oscil       kPanDep,kpanRate*1.5*kdev,gisine 
abuf                delayr      (0.01)+ioffset 
atap                deltap3     adlt+kDopDep+ioffset 
                    delayw      ain 
a1,a2               pan2        atap, kpan + 0.5 + kPanDep 
                    xout        a1, a2 

endop 



                    instr 2 


kMix                =           gkMix * .01
kporttime           linseg      0,0.01,0.01 ;CREATE A RAMPING UP ENVELOPE


apulser,apulser2    sampler     [snd],.1,p4
gapulser            =           apulser
gapulser2           =           apulser2
kPinkHP             portk       gkPinkHP, kporttime 
kPinkLP             portk       gkPinkLP, kporttime ;SMOOTH FLTK SLIDER VARIABLE
apulse              butlp       apulser, kPinkLP ;APPLY FILTER TO PINK NOISE SIGNAL
apulse              buthp       apulser, kPinkHP 
apulse2             butlp       apulser2, kPinkLP 
apulse2             buthp       apulser2, kPinkHP 


kbase               portk       gkbase*p4, kporttime 
ktrig               changed     gksound;
if ktrig=1 then 
                    reinit      RESTART 
endif 


RESTART: 

ialgfn              init        girtos1+i(gksound)+1 ;MODAL ALGORITHM FUNCTION TABLE NUMBER
imodes              =           ftlen(ialgfn) 
icount              init        1 

                    modemoduleL apulse, kbase, icount, ialgfn, imodes 
                    modemoduleR apulse2, kbase, icount, ialgfn, imodes 

aout                zar         0 
aout2               zar         3 

aout                =           (aout * .1) / imodes 
aout2               =           (aout2 * .1) /imodes 

                    rireturn    

if gkDopOn=1 then 
a1,a2 dopplerUDO aout, gkDopRate*p4, gkDopDep, gkPanDep , gkPanRate
a3,a4 dopplerUDO aout2, gkDopRate*p4, gkDopDep, gkPanDep , gkPanRate


aouterR = ((a1+a3)*(kMix))+((apulse)*(1-kMix))
aouterL = ((a2+a4)*(kMix))+((apulse2)*(1-kMix)) 

                    outs        aouterR*gkenv*0.5,aouterL*gkenv * 0.5


                    zawm        aouterR , 1 
                    zawm        aouterL , 2 
                    zawm        aouterR , 4 
                    zawm        aouterL , 5 

else 

aouterR             =           (aout*(kMix))+(apulse*(1-kMix))
aouterL             =           (aout2*(kMix))+(apulser2*(1-kMix))

                    outs        aouterR*gkenv*0.5,aouterL*gkenv * 0.5

                    zawm        aouterR , 1
                    zawm        aouterR , 2 
                    zawm        aouterL , 4 
                    zawm        aouterL , 5 
endif 

                    zacl        0,0 
                    zacl        3,3 

                    endin




</Stereo>


<CsoundScore>
;#   p1      p2   p3      

i   2      0    [total_time] 1


</CsoundScore>


<PythonScore>

import random

num = getUserValue("polynum")
rnd = getUserValue("polyspread")
for i in range(num+1):
    forInst(2)
    p2 = 0
    p3 = '[total_time]'
    p4 = random.uniform(1.0-rnd, 1.0+rnd)
</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
