class Module(BaseModule):
    """
    Multi-band reverb module
    
    Sliders under the graph:
    
        - Frequency Splitter : Split points for multi-band processing
        - Reverb Band 1 : Amount of reverb applied on first band
        - Cutoff Band 1 : Cutoff frequency of the reverb's lowpass filter (damp) for the first band
        - Gain Band 1 : Gain of the reverberized first band
        - Reverb Band 2 : Amount of reverb applied on second band
        - Cutoff Band 2 : Cutoff frequency of the reverb's lowpass filter (damp) for the second band
        - Gain Band 2 : Gain of the reverberized second band
        - Reverb Band 3 : Amount of reverb applied on third band
        - Cutoff Band 3 : Cutoff frequency of the reverb's lowpass filter (damp) for the third band
        - Gain Band 3 : Gain of the reverberized third band
        - Reverb Band 4 : Amount of reverb applied on fourth band
        - Cutoff Band 4 : Cutoff frequency of the reverb's lowpass filter (damp) for the fourth band
        - Gain Band 4 : Gain of the reverberized fourth band
        - Dry / Wet : Mix between the original signal and the harmonized signals
    
    Dropdown menus, toggles and sliders on the bottom left:
    
        - # of Voices : Number of voices played simultaneously (polyphony), only available at initialization time
        - Polyphony Spread : Pitch variation between voices (chorus), only available at initialization time
    
    Graph only parameters :
    
        - Overall Amplitude : The amplitude curve applied on the total duration of the performance
    """
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addSampler("snd")
        freqs = self.splitter.get(True)
        self.FBfade = SigTo(value=1, time=.01, init=1)
        self.split = FourBand(input=self.snd, freq1=freqs[0], freq2=freqs[1], freq3=freqs[2], mul=self.FBfade)
        self.fbs = self.duplicate([self.fb1,self.fb2,self.fb3,self.fb4], len(self.snd))
        self.cutoffs = self.duplicate([self.cutoff1,self.cutoff2,self.cutoff3,self.cutoff4], len(self.snd))
        self.mul1 = DBToA(self.gain1)
        self.mul2 = DBToA(self.gain2)
        self.mul3 = DBToA(self.gain3)
        self.mul4 = DBToA(self.gain4)
        self.muls = self.duplicate([self.mul1,self.mul2,self.mul3,self.mul4], len(self.snd))
        self.verb = WGVerb(input=self.split, feedback=self.fbs, cutoff=self.cutoffs, bal=self.drywet, mul=self.muls).mix(self.nchnls)
        self.out = self.verb*self.env

    def splitter_up(self, value):
        self.FBfade.value = 0
        time.sleep(.02)
        self.split.freq1 = value[0]
        self.split.freq2 = value[1]
        self.split.freq3 = value[2]
        time.sleep(.02)
        self.FBfade.value = 1

Interface = [   csampler(name="snd"), 
                cgraph(name="env", label="Overall Amplitude", func=[(0,1),(1,1)], col="blue1"),
                csplitter(name="splitter", label="Frequency Splitter", min=100, max=18000, init=[150, 500, 2000], 
                          num_knobs=3, rel="log", gliss=0, up=True, unit="Hz", col="grey"),
                cslider(name="fb1", label="Reverb Band 1", min=0, max=0.999, init=0.5, rel="lin", unit="x", col="purple1", half=True),
                cslider(name="fb2", label="Reverb Band 2", min=0, max=0.999, init=0.75, rel="lin", unit="x", col="purple2", half=True),
                cslider(name="cutoff1", label="CutOff Band 1", min=20, max=20000, init=2500, rel="log", unit="Hz", col="green1", half=True),
                cslider(name="cutoff2", label="CutOff Band 2", min=20, max=20000, init=4000, rel="log", unit="Hz", col="green2", half=True),
                cslider(name="gain1", label="Gain Band 1", min=-48, max=18, init=0, rel="lin", unit="dB", col="red1", half=True),
                cslider(name="gain2", label="Gain Band 2", min=-48, max=18, init=0, rel="lin", unit="dB", col="red2", half=True),
                cslider(name="fb3", label="Reverb Band 3", min=0, max=0.999, init=0.85, rel="lin", unit="x", col="purple3", half=True),
                cslider(name="fb4", label="Reverb Band 4", min=0, max=0.999, init=0.65, rel="lin", unit="x", col="purple4", half=True),
                cslider(name="cutoff3", label="CutOff Band 3", min=20, max=20000, init=5000, rel="log", unit="Hz", col="green3", half=True),
                cslider(name="cutoff4", label="CutOff Band 4", min=20, max=20000, init=6000, rel="log", unit="Hz", col="green4", half=True),
                cslider(name="gain3", label="Gain Band 3", min=-48, max=18, init=0, rel="lin", unit="dB", col="red3", half=True),
                cslider(name="gain4", label="Gain Band 4", min=-48, max=18, init=0, rel="lin", unit="dB", col="red4", half=True),
                cslider(name="drywet", label="Dry / Wet", min=0, max=1, init=0.5, rel="lin", unit="x", col="blue1"),
                cpoly()
          ]


####################################
##### Cecilia reserved section #####
#### Presets saved from the app ####
####################################


CECILIA_PRESETS = {u'01-Snare Room': {'gainSlider': 0.0,
                    'nchnls': 2,
                    'plugins': {0: ['None', [0, 0, 0, 0], [[0, 0, None], [0, 0, None], [0, 0, None]]],
                                1: ['None', [0, 0, 0, 0], [[0, 0, None], [0, 0, None], [0, 0, None]]],
                                2: ['None', [0, 0, 0, 0], [[0, 0, None], [0, 0, None], [0, 0, None]]]},
                    'totalTime': 30.000000000000071,
                    'userGraph': {'cutoff1': {'curved': False, 'data': [[0.0, 0.79931333622401246], [1.0, 0.79931333622401246]]},
                                  'cutoff2': {'curved': False, 'data': [[0.0, 0.79931333622401246], [1.0, 0.79931333622401246]]},
                                  'cutoff3': {'curved': False, 'data': [[0.0, 0.79931333622401246], [1.0, 0.79931333622401246]]},
                                  'cutoff4': {'curved': False, 'data': [[0.0, 0.79931333622401246], [1.0, 0.79931333622401246]]},
                                  'drywet': {'curved': False, 'data': [[0.0, 0.80000000000000004], [1.0, 0.80000000000000004]]},
                                  'env': {'curved': False, 'data': [[0.0, 1.0], [1.0, 1.0]]},
                                  'fb1': {'curved': False, 'data': [[0.0, 0.50050050050050054], [1.0, 0.50050050050050054]]},
                                  'fb2': {'curved': False, 'data': [[0.0, 0.50050050050050054], [1.0, 0.50050050050050054]]},
                                  'fb3': {'curved': False, 'data': [[0.0, 0.50050050050050054], [1.0, 0.50050050050050054]]},
                                  'fb4': {'curved': False, 'data': [[0.0, 0.50050050050050054], [1.0, 0.50050050050050054]]},
                                  'gain1': {'curved': False, 'data': [[0.0, 0.72727272727272729], [1.0, 0.72727272727272729]]},
                                  'gain2': {'curved': False, 'data': [[0.0, 0.72727272727272729], [1.0, 0.72727272727272729]]},
                                  'gain3': {'curved': False, 'data': [[0.0, 0.72727272727272729], [1.0, 0.72727272727272729]]},
                                  'gain4': {'curved': False, 'data': [[0.0, 0.72727272727272729], [1.0, 0.72727272727272729]]},
                                  'sndend': {'curved': False, 'data': [[0.0, 1.0], [1.0, 1.0]]},
                                  'sndgain': {'curved': False, 'data': [[0.0, 0.72727272727272729], [1.0, 0.72727272727272729]]},
                                  'sndstart': {'curved': False, 'data': [[0.0, 0.0], [1.0, 0.0]]},
                                  'sndtrans': {'curved': False, 'data': [[0.0, 0.5], [1.0, 0.5]]},
                                  'sndxfade': {'curved': False, 'data': [[0.0, 0.02], [1.0, 0.02]]}},
                    'userInputs': {'snd': {'dursnd': 1.9194331169128418,
                                           'gain': [0.0, False, False],
                                           'gensizesnd': 131072,
                                           'loopIn': [0.0, False, False],
                                           'loopMode': 1,
                                           'loopOut': [1.9194331169128418, False, False],
                                           'loopX': [1.0, False, False],
                                           'nchnlssnd': 2,
                                           'offsnd': 0.0,
                                           'path': u'/Users/jm/Desktop/Dropbox/Maitrise/svnBKP/memoire/bub/snds/drums.aif',
                                           'srsnd': 44100.0,
                                           'startFromLoop': 0,
                                           'transp': [0.0, False, False],
                                           'type': 'csampler'}},
                    'userSliders': {'cutoff1': [4999.9999999999991, 0, None, 1],
                                    'cutoff2': [4999.9999999999991, 0, None, 1],
                                    'cutoff3': [5209.2578159937111, 0, None, 1],
                                    'cutoff4': [4999.9999999999991, 0, None, 1],
                                    'drywet': [0.80000000000000004, 0, None, 1],
                                    'fb1': [0.0, 0, None, 1],
                                    'fb2': [0.0, 0, None, 1],
                                    'fb3': [0.75062983425414365, 0, None, 1],
                                    'fb4': [0.0, 0, None, 1],
                                    'gain1': [0.0, 0, None, 1],
                                    'gain2': [0.0, 0, None, 1],
                                    'gain3': [0.0, 0, None, 1],
                                    'gain4': [0.0, 0, None, 1],
                                    'splitter': [[150.00000000000003, 499.99999999999994, 2000.0000000000002], 0, None, [1, 1]]},
                    'userTogglePopups': {'polynum': 0, 'polyspread': 0.001}}}