class Module(BaseModule):
    def __init__(self):
        BaseModule.__init__(self)
        self.lfocwave = LFO(freq=self.cfreqspeed, sharp=1, type=self.cwave_index, mul=0.5, add=0.5)
        self.lfocrange = Randi(min=self.cfreqrange[0], max=self.cfreqrange[1], freq=self.cfreqspeed, mul=self.lfocwave*self.onoffc_value)
        self.realfreqc = self.cfreq+self.lfocrange
        
        self.lfomwave = LFO(freq=self.mfreqspeed, sharp=1, type=self.mwave_index, mul=0.5, add=0.5)
        self.lfomrange = Randi(min=self.mfreqrange[0], max=self.mfreqrange[1], freq=self.mfreqspeed, mul=self.lfomwave*self.onoffm_value)
        self.realfreqm = self.mfreq+self.lfomrange
        
        self.lfoind1wave = LFO(freq=self.ind1speed, sharp=1, type=self.indwave1_index, mul=0.5, add=0.5)
        self.lfoind1range = Randi(min=self.ind1range[0], max=self.ind1range[1], freq=self.ind1speed, mul=self.lfoind1wave*self.onoffind1_value)
        self.realind1 = self.ind1+self.lfoind1range
        
        self.lfoind2wave = LFO(freq=self.ind2speed, sharp=1, type=self.indwave2_index, mul=0.5, add=0.5)
        self.lfoind2range = Randi(min=self.ind2range[0], max=self.ind2range[1], freq=self.ind2speed, mul=self.lfoind2wave*self.onoffind2_value)
        self.realind2 = self.ind2+self.lfoind2range

        self.out = CrossFM(carrier=[self.realfreqc,self.realfreqc*0.995], ratio=self.realfreqm, ind1=self.realind1, ind2=self.realind2, mul=0.3*self.env)
        
        
    def cwave(self, index, value):
        self.lfocwave.type = index
        
    def mwave(self, index, value):
        self.lfomwave.type = index
           
    def indwave1(self, index, value):
        self.lfoind1wave.type = index
  
    def indwave2(self, index, value):
        self.lfoind2wave.type = index
        
    def onoffc(self, value):
        self.lfocrange.mul = self.lfocwave*value

    def onoffm(self, value):
        self.lfomrange.mul = self.lfomwave*value
    
    def onoffind1(self, value):
        self.lfoind1range.mul = self.lfoind1wave*value
             
    def onoffind2(self, value):
        self.lfoind2range.mul = self.lfoind2wave*value
            
Interface = [   cgraph(name="env", label="Overall Amplitude", func=[(0,1),(1,1)], col="blue"),
                cslider(name="cfreq", label="Carrier Frequency", min=10, max=1000, init=100, rel="log", unit="Hertz", col="blue"),
                crange(name="cfreqrange", label="C FreqMod Range", min=0.001, max=100, init=[1,10], rel="log", unit="Hertz", col="blue"),
                cslider(name="cfreqspeed", label="C FreqMod Speed", min=0.001, max=100, init=4, rel="log", unit="Hertz", col="blue"),
                cslider(name="mfreq", label="Modulator Ratio", min=0.01, max=100, init=0.5, rel="log", unit="x", col="green"),
                crange(name="mfreqrange", label="M RatioMod Range", min=0.001, max=50, init=[0.01,15], rel="lin", unit="x", col="green"),
                cslider(name="mfreqspeed", label="M RatioMod Speed", min=0.001, max=100, init=4, rel="log", unit="Hertz", col="green"),
                cslider(name="ind1", label="Carrier Index", min=0.001, max=100, init=2, rel="log", unit="x", col="lightblue"),
                crange(name="ind1range", label="C IndexMod Range", min=0.001, max=50, init=[0.3,2], rel="lin", unit="x", col="lightblue"),
                cslider(name="ind1speed", label="C IndexMod Speed", min=0.001, max=100, init=4, rel="log", unit="Hertz", col="lightblue"),
                cslider(name="ind2", label="Modulator Index", min=0.001, max=100, init=2, rel="log", unit="x", col="tan"),
                crange(name="ind2range", label="M IndexMod Range", min=0.001, max=50, init=[0.5,3], rel="lin", unit="x", col="tan"),
                cslider(name="ind2speed", label="M IndexMod Speed", min=0.001, max=100, init=4, rel="log", unit="Hertz", col="tan"),
                cpopup(name="cwave", label="C FreqMod Wave", init="Square", col="blue", value=["Saw Up", "Saw Down", "Square", "Triangle",
                            "Pulse", "Bipolar Pulse", "Sample and Hold", "Modulated Sine"]),
                ctoggle(name="onoffc", label="C FreqMod On/Off", init=0, col="blue"),
                cpopup(name="mwave", label="M RatioMod Wave", init="Square", col="green", value=["Saw Up", "Saw Down", "Square", "Triangle",
                            "Pulse", "Bipolar Pulse", "Sample and Hold", "Modulated Sine"]),
                ctoggle(name="onoffm", label="M RatioMod On/Off", init=0, col="green"),
                cpopup(name="indwave1", label="C IndexMod Wave", init="Square", col="lightblue", value=["Saw Up", "Saw Down", "Square",
                            "Triangle", "Pulse", "Bipolar Pulse", "Sample and Hold", "Modulated Sine"]),
                ctoggle(name="onoffind1", label="C IndexMod On/Off", init=0, col="lightblue"),
                cpopup(name="indwave2", label="M IndexMod Wave", init="Square", col="tan", value=["Saw Up", "Saw Down", "Square", "Triangle",
                            "Pulse", "Bipolar Pulse", "Sample and Hold", "Modulated Sine"]),
                ctoggle(name="onoffind2", label="M IndexMod On/Off", init=0, col="tan"),
          ]

