<CeciliaInterface>
cgraph enveloppe -label Envelope Shape -rel lin -min 0 -max 1 -gen 23 -col red -func 0 0 .001 1 .1 .7 .7 .6 1 0
cgraph indexenveloppe -label Index Env Shape -rel log  -min .0001 -max 1 -init .5 -gen 27 -col green -func 0 .6 .1 .051 1 .0001

cslider pit -label Transpose -unit semitones -min -48 -max 48 -init 0  -col blue
crange freq -label Frequency range -unit Hz -rel log -min 20 -max 20000 -init 100,3000  -col green
crange speed -label Speed range -unit Hz -rel log -min 0.01 -max 100 -init 0.1, 50 -col orange
crange intensity -label Intensity range -unit db -min 30 -max 90 -init 40.0, 70.0 -col royalblue
cslider spatial -label Panning -min 0 -max 1 -init 1 -rate k -col olivegreen
cslider density -label Density -min 0 -max 1 -init 1 -rate k -col olivegreen
cslider carrier -label Carrier Freq Mult -rel log -min 0.001 -max 10 -init 1.0 -col khaki
cslider mod -label Modulator Freq Mult -rel log -min 0.001 -max 10 -init 1.05 -col khaki
cslider ind -label Modulation Index -rel log -min 0.001 -max 15 -init 4 -col khaki
cslider no_of_grains -label Number of grains -rate k -res int -min 1 -max 25 -init 8 -gliss 0 -col blue
cslider seed -label Random Seed -rate i -min 0 -max 1 -init .51

cpopup freqi -label Freq Noise Source -value rand bexprnd exprand poisson betarand weibull gauss -init weibull -col forestgreen
cpopup duri -label Time Noise Source -value rand bexprnd exprand poisson betarand weibull gauss -init gauss -col orange
cpopup inti -label Amp Noise Source -value rand bexprnd exprand poisson betarand weibull gauss -init poisson -col marineblue
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>

            instr 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25

kidur       init        .1
iseed       =           giseed*p1

if gkfreqi == 0 then
kpfreq      rand        1, .9874653*iseed
elseif gkfreqi == 1 then
kpfreq      bexprnd     1
elseif gkfreqi == 2 then
kpfreq      exprand     1
elseif gkfreqi == 3 then
kpfreq      betarand    1, 1, .8
elseif gkfreqi == 4 then
kpfreq      weibull     1, .5
elseif gkfreqi == 5 then
kpfreq      gauss       2
endif

if gkduri == 0 then
kpdur       rand        1, .4653*iseed
elseif gkduri == 1 then
kpdur       bexprnd     1
elseif gkduri == 2 then
kpdur       exprand     1
elseif gkduri == 3 then
kpdur       poisson     1
elseif gkduri == 4 then
kpdur       betarand    1, .5, .8
elseif gkduri == 5 then
kpdur       weibull     1, .5
elseif gkduri == 6 then
kpdur       gauss       2
endif

if gkinti == 0 then 
kpfreq      rand        1, .274653*iseed
elseif gkinti == 1 then
kpint       bexprnd     1
elseif gkinti == 2 then
kpint       exprand     1
elseif gkinti == 3 then
kpint       poisson     1
elseif gkinti == 4 then
kpint       betarand    1, .5, .8
elseif gkinti == 5 then
kpint       weibull     1, .5
elseif gkinti == 6 then
kpint       gauss       2
endif


kpintk      =           kpint/6
kppan       rand        1, iseed*.634 
kpjou       rand        1, iseed*.824 
kpphs       rand        1, iseed*.951

kgfs        =           gkfreqmax 
kgfi        =           gkfreqmin 
kgvs        =           gkspeedmax 
kgvi        =           gkspeedmin
kgis        =           ampdb(gkintensitymax)
kgii        =           ampdb(gkintensitymin)
kgps        =           gkspatial 
kgjs        =           gkdensity 
kidur       =           int( kr/ exp( log(kgvi) + (abs(kpdur) * (log(kgvs)-log(kgvi)))))/kr

chicoutimi:
idur        =           i(kidur)+1/kr
ifreq       =           exp(log(i(kgfi))+abs(i(kpfreq))*(log(i(kgfs))-log(i(kgfi))))
ipan        =           i(kppan)
ijou        =           abs(i(kpjou))
idens       =           i(kgjs)
iphs        =           abs(i(kpphs))
ispa        =           i(kgps)
iinten      =           exp(log(i(kgii))+abs(i(kpintk))*(log(i(kgis))-log(i(kgii))))
iamp        =           (ijou < idens?iinten:0)
icar        =           i(gkcarrier)
imod        =           i(gkmod)
            timout      0, idur, montreal
            reinit      chicoutimi

montreal:
aline       line        0.0001, idur, 1
klin        oscil1       0,gkind, 1/idur, 27
kfac        =           semitone(gkpit)
asog        foscil      iamp, ifreq*kfac, icar, imod, klin, 2, iphs
as1g        foscil      iamp, ifreq*kfac*1.01, icar, imod, klin, 2, iphs
asog        =           asog + as1g
aenv        table       aline, 23, 1
aProc1      =           asog*aenv*((1+ipan*ispa))*10
aProc2      =           asog*aenv*((1-ipan*ispa))*10

aGauche     =           aProc1
aDroite     =           aProc2

            out        (aGauche+ aDroite)*.25

            endin




instr 131


ktrig       changed     gkno_of_grains
if ktrig = 1 then
            event     "i", 44, .0, .001
            event     "i", 130, 0.001, p3
endif


endin



            instr 130


inum        =           0
generate:
inum        =           inum + 1
            event_i     "i", inum, 0.002, p3

if (inum < i(gkno_of_grains)) goto generate

rireturn


            endin



            instr 44


            turnoff2    1,0,0.5
            turnoff2    2,0,0.5
            turnoff2    3,0,0.5
            turnoff2    4,0,0.5
            turnoff2    5,0,0.5
            turnoff2    6,0,0.5
            turnoff2    7,0,0.5
            turnoff2    8,0,0.5
            turnoff2    9,0,0.5
            turnoff2    10,0,0.5
            turnoff2    11,0,0.5
            turnoff2    12,0,0.5
            turnoff2    13,0,0.5
            turnoff2    14,0,0.5
            turnoff2    15,0,0.5
            turnoff2    16,0,0.5
            turnoff2    17,0,0.5
            turnoff2    18,0,0.5
            turnoff2    19,0,0.5
            turnoff2    20,0,0.5
            turnoff2    21,0,0.5
            turnoff2    22,0,0.5
            turnoff2    23,0,0.5
            turnoff2    24,0,0.5
            turnoff2    25,0,0.5


            endin



</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
            instr 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25

kidur       init        .1
iseed       =           giseed*p1

if gkfreqi == 0 then
kpfreq      rand        1, .9874653*iseed
elseif gkfreqi == 1 then
kpfreq      bexprnd     1
elseif gkfreqi == 2 then
kpfreq      exprand     1
elseif gkfreqi == 3 then
kpfreq      betarand    1, 1, .8
elseif gkfreqi == 4 then
kpfreq      weibull     1, .5
elseif gkfreqi == 5 then
kpfreq      gauss       2
endif

if gkduri == 0 then
kpdur       rand        1, .4653*iseed
elseif gkduri == 1 then
kpdur       bexprnd     1
elseif gkduri == 2 then
kpdur       exprand     1
elseif gkduri == 3 then
kpdur       poisson     1
elseif gkduri == 4 then
kpdur       betarand    1, .5, .8
elseif gkduri == 5 then
kpdur       weibull     1, .5
elseif gkduri == 6 then
kpdur       gauss       2
endif

if gkinti == 0 then 
kpfreq      rand        1, .274653*iseed
elseif gkinti == 1 then
kpint       bexprnd     1
elseif gkinti == 2 then
kpint       exprand     1
elseif gkinti == 3 then
kpint       poisson     1
elseif gkinti == 4 then
kpint       betarand    1, .5, .8
elseif gkinti == 5 then
kpint       weibull     1, .5
elseif gkinti == 6 then
kpint       gauss       2
endif


kpintk      =           kpint/6
kppan       rand        1, iseed*.634 
kpjou       rand        1, iseed*.824 
kpphs       rand        1, iseed*.951

kgfs        =           gkfreqmax 
kgfi        =           gkfreqmin 
kgvs        =           gkspeedmax 
kgvi        =           gkspeedmin
kgis        =           ampdb(gkintensitymax)
kgii        =           ampdb(gkintensitymin)
kgps        =           gkspatial 
kgjs        =           gkdensity 
kidur       =           int( kr/ exp( log(kgvi) + (abs(kpdur) * (log(kgvs)-log(kgvi)))))/kr

chicoutimi:
idur        =           i(kidur)+1/kr
ifreq       =           exp(log(i(kgfi))+abs(i(kpfreq))*(log(i(kgfs))-log(i(kgfi))))
ipan        =           i(kppan)
ijou        =           abs(i(kpjou))
idens       =           i(kgjs)
iphs        =           abs(i(kpphs))
ispa        =           i(kgps)
iinten      =           exp(log(i(kgii))+abs(i(kpintk))*(log(i(kgis))-log(i(kgii))))
iamp        =           (ijou < idens?iinten:0)
icar        =           i(gkcarrier)
imod        =           i(gkmod)
            timout      0, idur, montreal
            reinit      chicoutimi

montreal:
aline       line        0.0001, idur, 1
klin        oscil1       0,gkind, 1/idur, 27
kfac        =           semitone(gkpit)
asog        foscil      iamp, ifreq*kfac, icar, imod, klin, 2, iphs
as1g        foscil      iamp, ifreq*kfac*1.01, icar, imod, klin, 2, iphs
asog        =           asog + as1g
aenv        table       aline, 23, 1
aProc1      =           asog*aenv*((1+ipan*ispa))*5
aProc2      =           asog*aenv*((1-ipan*ispa))*5

aGauche     =           aProc1
aDroite     =           aProc2

            outs        aGauche, aDroite

            endin




instr 131


ktrig       changed     gkno_of_grains
if ktrig = 1 then
            event     "i", 44, .0, .001
            event     "i", 130, 0.001, p3
endif


endin



            instr 130


inum        =           0
generate:
inum        =           inum + 1
            event_i     "i", inum, 0.002, p3

if (inum < i(gkno_of_grains)) goto generate

rireturn


            endin



            instr 44


            turnoff2    1,0,0.5
            turnoff2    2,0,0.5
            turnoff2    3,0,0.5
            turnoff2    4,0,0.5
            turnoff2    5,0,0.5
            turnoff2    6,0,0.5
            turnoff2    7,0,0.5
            turnoff2    8,0,0.5
            turnoff2    9,0,0.5
            turnoff2    10,0,0.5
            turnoff2    11,0,0.5
            turnoff2    12,0,0.5
            turnoff2    13,0,0.5
            turnoff2    14,0,0.5
            turnoff2    15,0,0.5
            turnoff2    16,0,0.5
            turnoff2    17,0,0.5
            turnoff2    18,0,0.5
            turnoff2    19,0,0.5
            turnoff2    20,0,0.5
            turnoff2    21,0,0.5
            turnoff2    22,0,0.5
            turnoff2    23,0,0.5
            turnoff2    24,0,0.5
            turnoff2    25,0,0.5


            endin



</Stereo>


<CsoundScore>
;#   p1    p2       p3              p4    p5   p6   p7   p8    p9   p10  p11  p12   p13  p14  p15  p16   p17  p18  p19  p20   
f    1     0        8192            10    1    0    0    .2    0    0    0    .15    0    0    0    .1    0    0    0    .05   
f    2      0       8192            10    1
i    131     0    [total_time]    
</CsoundScore>


<PythonScore>
import random
addLine('f1 0 8192 10 1')

for i in range(1,getUserValue("no_of_grains")):

    forInst(i)

    p2 = random.uniform(.002, .006)

    p3 = "[total_time]"

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
