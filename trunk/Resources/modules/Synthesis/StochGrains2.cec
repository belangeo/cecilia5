<CeciliaInterface>
cgraph enveloppe -label Envelope -min 0. -max 1 -gen 23 -col red -func 0 0. .001 1 .05 .85 .97 .6 1 0.
cgraph indexenveloppe -label Index Env -rel lin -min .0001 -max 1 -init .5 -gen 27 -col green -func 0 1 .7 .051 1 .0001
cslider transx -label Transpose -min -48 -max 48 -unit semit -rate k -init 0.0 -col green
crange freq -label Pitch range -unit pch -min 1 -max 90 -init 40,80  -col marineblue
crange speed -label Speed range -unit Hz -rel log -min 0.01 -max 100 -init 1, 2 -col forestgreen
crange intensity -label Intensity range -unit db -min 30 -max 90 -init 60.0, 80.0 -col blue
crange dur -label Duration range -unit sec -rel log -min .005 -max 5 -init 1.5, 4 -col khaki
cslider carrier -label Carrier Freq  -rel log -min 0.03 -max 10 -init 1.0 -col red
cslider mod  -label Modul Freq  -rel log -min 0.001 -max 10 -init 1.01 -col red 
cslider maxindex -label Max Index -rel log -min 0.03 -max 10 -init 1 -col red
cslider spat -label Pan Range -min 0 -max 1 -init 1  -col olivegreen
cslider density -label Density -min 0 -max 1 -init 1 -col olivegreen
cslider no_of_grains -label Number of grains -rate k -res int -min 2 -max 25 -init 8 -gliss 0 -up 1 -col olivegreen
cpopup typou -label Synth Type -value FM VCO -col blue
cpopup duri -label Time Noise Source -value rand bexprnd exprand poisson betarand weibull gauss -col forestgreen
cpopup freqi -label Freq Noise Source -value rand bexprnd exprand poisson betarand weibull gauss -col marineblue
cpopup inti -label Amp Noise Source -value  rand bexprnd exprand poisson betarand weibull gauss -col red
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>
ga2                  init        0
ga1                  init        0
iseed                rnd31       1, 1
giseed               =           iseed+1 

                     instr 197
if gkfreqi == 0 then 
gkpfreq1             rand        1, .9874653*giseed
elseif gkfreqi == 1 then
gkpfreq1             bexprnd     1
elseif gkfreqi == 2 then
gkpfreq1             exprand     1
elseif gkfreqi == 3 then
gkpfreq1             betarand    1, 1, .8
elseif gkfreqi == 4 then
gkpfreq1             weibull     1, .5
elseif gkfreqi == 5 then
gkpfreq1             gauss       2
endif

if gkduri == 0 then
gkpdur1              rand        1, .4653*giseed
elseif gkduri == 1 then
gkpdur1              bexprnd     1
elseif gkduri == 2 then
gkpdur1              exprand     1
elseif gkduri == 3 then
gkpdur1              poisson     1
elseif gkduri == 4 then
gkpdur1              betarand    1, .5, .8
elseif gkduri == 5 then
gkpdur1              weibull     1, .5
elseif gkduri == 6 then
gkpdur1              gauss       2
endif

if gkinti == 0 then 
gkpint1              rand        1, .274653*giseed
elseif gkinti == 1 then
gkpint1              bexprnd     1
elseif gkinti == 2 then
gkpint1              exprand     1
elseif gkinti == 3 then
gkpint1              poisson     1
elseif gkinti == 4 then
gkpint1              betarand    1, .5, .8
elseif gkinti == 5 then
gkpint1              weibull     1, .5
elseif gkinti == 6 then
gkpint1              gauss       2
endif

                     endin

                     instr 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
kiryt                init        .1
kpint                init        .1
idu                  init        .1
idur                 init        .1

iseed                =           p1*giseed
kpryt                rand        1, iseed*.243 
kpfreq               =           gkpfreq1
kpint                =           gkpint1

kpintk = kpint/6
kppan                rand        1, iseed*.634 
kpjou                rand        1, iseed*.824 

kpphs                rand        1, iseed*.951 
kpdur                =           gkpdur1
kspat                random      -gkspat,gkspat

kgfff                random      gkfreqmin+50, gkfreqmax+50
kgfffi = int(kgfff)
kgdmax               =           gkdurmax 
kgdmin               =           gkdurmin 
kgis                 =           ampdb(gkintensitymax)
kgii                 =           ampdb(gkintensitymin)
kiryt                =           int(kr/exp(log(gkspeedmin) + (abs(kpryt) * (log(gkspeedmax)-log(gkspeedmin)))))/kr

chic:
ktrigger             init        1
iryt                 =           i(kiryt)+1/kr
ipo                  =           i(kgfffi)
ipoooo               =           int(ipo/12)
ipou                 =           ipo % 12
ipou2                table       ipou, 42
ipou3                =           ipou2+ipoooo
ifreq                =           cpspch(ipou3)
idur                 =           i(gkdurmin)+(abs(i(kpdur)*i(gkdurmax)) -i(gkdurmin))
ispa                 =           .5 +(i(kspat)*.5)
ijou                 =           abs(i(kpjou))
idens                =           i(gkdensity)
iphs                 =           abs(i(kpphs))
iinten               =           exp(log(i(kgii))+abs(i(kpintk))*(log(i(kgis))-log(i(kgii))))
iamp                 =           (ijou < idens?iinten:0)
icar                 =           i(gkcarrier)
imod                 =           i(gkmod)
idu                  =           idur*iryt+1/kr

if (ktrigger == 0) goto contin 
                     event       "i", gktypou+175, 0, idu, ifreq, iamp, icar, imod
                     ktrigger             =           0
contin:
                     timout      0, iryt, montreal
                     reinit      chic
montreal:

                     endin




                     instr 175

ktrans               =           semitone(gktransx)
klin                 oscili      gkmaxindex, 1/p3, 27

asog                 foscili     p5*.5, p4*ktrans, p6, p7, klin, 1, 1
asig                 foscili     p5*.5, p4*ktrans*1.005, p6, p7, klin, 1, 1

aline                line        0.0001, p3, 1
aenv                 tablei      aline, 23, 1

aoutL                dcblock     aenv*(asig+asog)

                     out         aoutL

                     endin




                     instr 176

ktrans               =           semitone(gktransx)

kdev                 randomi     .9, 1.1, .5
kmod                 lfo         gkmaxindex*10, 100.5*kdev*gkmod

klin                 oscil       1, 1/p3, 27
klo                  =           klin*.8+.01

asog                 vco2        p5, p4 *ktrans+kmod*kdev, 20 , klo , 0 
asig                 vco2        p5, p4*ktrans*1.0013+kmod*kdev , 20 , klo , 0 

aline                line        0.0001, p3, 1
aenv                 table       aline, 23, 1 

aoutL                dcblock     aenv*(asog+asig)



                     out         aoutL
                     endin




instr 131


ktrig       changed     gkno_of_grains
if ktrig = 1 then
            event     "i", 44, .0, .001
            event     "i", 130, 0.002, p3
endif


endin



            instr 130

inum        =           1
generate:
            event_i     "i", inum, 0.002, p3

if (inum < i(gkno_of_grains)) then
inum = inum + 1
goto generate
endif

            endin



            instr 44


            turnoff2    1,0,0.5
            turnoff2    2,0,0.5
            turnoff2    3,0,0.5
            turnoff2    4,0,0.5
            turnoff2    5,0,0.5
            turnoff2    6,0,0.5
            turnoff2    7,0,0.5
            turnoff2    8,0,0.5
            turnoff2    9,0,0.5
            turnoff2    10,0,0.5
            turnoff2    11,0,0.5
            turnoff2    12,0,0.5
            turnoff2    13,0,0.5
            turnoff2    14,0,0.5
            turnoff2    15,0,0.5
            turnoff2    16,0,0.5
            turnoff2    17,0,0.5
            turnoff2    18,0,0.5
            turnoff2    19,0,0.5
            turnoff2    20,0,0.5
            turnoff2    21,0,0.5
            turnoff2    22,0,0.5
            turnoff2    23,0,0.5
            turnoff2    24,0,0.5
            turnoff2    25,0,0.5
            turnoff2    175,0,0.5

            endin









</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
ga2         init        0
ga1         init        0

iseed       rnd31       1, 1
giseed      =           iseed+1 

            instr 197
if gkfreqi == 0 then 
gkpfreq1    rand        1, .9874653*giseed
elseif gkfreqi == 1 then
gkpfreq1    bexprnd     1
elseif gkfreqi == 2 then
gkpfreq1    exprand     1
elseif gkfreqi == 3 then
gkpfreq1    betarand    1, 1, .8
elseif gkfreqi == 4 then
gkpfreq1    weibull     1, .5
elseif gkfreqi == 5 then
gkpfreq1    gauss       2
endif

if gkduri == 0 then
gkpdur1     rand        1, .4653*giseed
elseif gkduri == 1 then
gkpdur1     bexprnd     1
elseif gkduri == 2 then
gkpdur1     exprand     1
elseif gkduri == 3 then
gkpdur1     poisson     1
elseif gkduri == 4 then
gkpdur1     betarand    1, .5, .8
elseif gkduri == 5 then
gkpdur1     weibull     1, .5
elseif gkduri == 6 then
gkpdur1     gauss       2
endif

if gkinti == 0 then 
gkpint1     rand        1, .274653*giseed
elseif gkinti == 1 then
gkpint1     bexprnd     1
elseif gkinti == 2 then
gkpint1     exprand     1
elseif gkinti == 3 then
gkpint1     poisson     1
elseif gkinti == 4 then
gkpint1     betarand    1, .5, .8
elseif gkinti == 5 then
gkpint1     weibull     1, .5
elseif gkinti == 6 then
gkpint1     gauss       2
endif

            endin

            instr 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
kiryt       init        .1
kpint       init        .1
idu         init        .1
idur        init        .1

iseed       =           p1*giseed
kpryt       rand        1, iseed*.243 
kpfreq      =           gkpfreq1
kpint       =           gkpint1

kpintk      =           kpint/6
kppan       rand        1, iseed*.634 
kpjou       rand        1, iseed*.824 

kpphs       rand        1, iseed*.951 
kpdur       =           gkpdur1
kspat       random      -gkspat,gkspat

kgfff       random      gkfreqmin+50, gkfreqmax+50
kgfffi      =           int(kgfff)
kgdmax      =           gkdurmax 
kgdmin      =           gkdurmin 
kgvs        =           gkspeedmax 
kgvi        =           gkspeedmin
kgis        =           ampdb(gkintensitymax)
kgii        =           ampdb(gkintensitymin)
kgjs        =           gkdensity
kiryt       =           int(kr/exp(log(kgvi) + (abs(kpryt) * (log(kgvs)-log(kgvi)))))/kr

kinst       =           gktypou+175

chic:
ktrigger    init        1
iryt        =           i(kiryt)+1/kr
ipo         =           i(kgfffi)
ipoooo      =           int(ipo/12)
ipou        =           ipo % 12
ipou2       table       ipou, 42
ipou3       =           ipou2+ipoooo
ifreq       =           cpspch(ipou3)
idur        =           i(kgdmin)+(abs(i(kpdur)*i(kgdmax)) -i(kgdmin))
ispa        =           .5 +(i(kspat)*.5)
ijou        =           abs(i(kpjou))
idens       =           i(kgjs)
iphs        =           abs(i(kpphs))
iinten      =           exp(log(i(kgii))+abs(i(kpintk))*(log(i(kgis))-log(i(kgii))))
iamp        =           (ijou < idens?iinten:0)
icar        =           i(gkcarrier)
imod        =           i(gkmod)
idu         =           idur*iryt+1/kr

if (ktrigger == 0) goto contin 
            event       "i", kinst, 0, idu, ifreq, iamp, icar, imod, ispa
idu         =           idur*iryt+1/kr

if (ktrigger == 0) goto contin 
            event       "i", kinst, 0, idu, ifreq, iamp, icar, imod, ispa

ktrigger    =           0
contin:
            timout      0, iryt, montreal

            reinit      chic
montreal:

            endin




            instr 175


ktrans      =           semitone(gktransx)

klin        oscili      gkmaxindex, 1/p3, 27

asog        foscili     p5*.5, p4*ktrans, p6, p7, klin, 1, 1
asig        foscili     p5*.5, p4*ktrans*1.005, p6, p7, klin, 1, 1

aline       line        0.0001, p3, 1
aenv        tablei      aline, 23, 1

aoutL       dcblock     aenv*(asig)*(sqrt(p8))
aoutR       dcblock     aenv*(asog) *(sqrt(1-p8))

            outs        aoutR, aoutL

            endin




            instr 176

ktrans      =           semitone(gktransx)

kdev        randomi     .9, 1.1, .5
kmod        lfo         gkmaxindex*10, 100.5*kdev*gkmod

klin        oscil       1, 1/p3, 27
klo         =           klin*.8+.01

asog        vco2        p5, p4 *ktrans+kmod*kdev, 20 , klo , 0 
asig        vco2        p5, p4*ktrans*1.0013+kmod*kdev , 20 , klo , 0 

aline       line        0.0001, p3, 1
aenv        table       aline, 23, 1 

aoutL       dcblock     aenv*(asog)*((p8))
aoutR       dcblock     aenv*(asig) *((1-p8))



            outs        aoutR, aoutL
            endin





            instr 130

inum        =           1
generate:
            event_i     "i", inum, 0.002, p3

if (inum < i(gkno_of_grains)) then
    inum        =           inum + 1
    goto generate
endif

            endin



            instr 131

ktrig       changed     gkno_of_grains
if ktrig = 1 then
            event       "i", 44, .0, .001
            event       "i", 130, 0.002, p3
endif
            endin




            instr 44

            turnoff2    1,0,0.5
            turnoff2    2,0,0.5
            turnoff2    3,0,0.5
            turnoff2    4,0,0.5
            turnoff2    5,0,0.5
            turnoff2    6,0,0.5
            turnoff2    7,0,0.5
            turnoff2    8,0,0.5
            turnoff2    9,0,0.5
            turnoff2    10,0,0.5
            turnoff2    11,0,0.5
            turnoff2    12,0,0.5
            turnoff2    13,0,0.5
            turnoff2    14,0,0.5
            turnoff2    15,0,0.5
            turnoff2    16,0,0.5
            turnoff2    17,0,0.5
            turnoff2    18,0,0.5
            turnoff2    19,0,0.5
            turnoff2    20,0,0.5
            turnoff2    21,0,0.5
            turnoff2    22,0,0.5
            turnoff2    23,0,0.5
            turnoff2    24,0,0.5
            turnoff2    25,0,0.5
            turnoff2    175,0,0.5

            endin













</Stereo>


<CsoundScore>
;#   p1     p2   p3              p4    p5       p6       p7       p8       p9       p10      p11      p12      p13      p14      p15      p16      p17      p18      p19      p20      p21     p22     p23    p24     p25     p26     p27     p28     p29     p30     p31    p32    p33   p34    p35    p36    
f    1      0    8192            10    1        
f    42     0    16              -2    0        0        0        0        .02      .03      .05      .07      .07      .09      .1       .1       .1       .1       .1       .1       .1      
f    31     0    32              -2    -997     -1057    -1116    -1188    -1277    -1356    -1422    -1491    -1557    -1617    -1783    -1807    -1931    -2049    -2157    -2221    0.82    0.81    0.8    0.79    0.78    0.77    0.76    0.75    0.74    0.73    .72    .71    .7    .69    .68    .67    
f    32     0    32              -2    -1007    -1039    -1107    -1132    -1245    -1391    -1435    -1473    -1537    -1609    -1791    -1817    -1941    -2039    -2149    -2234    0.82    0.81    0.8    0.79    0.78    0.77    0.76    0.75    0.74    0.73    .72    .71    .7    .69    .68    .67    

i    197    0    [total_time]    
i    131    0    [total_time]    


e    



</CsoundScore>


<PythonScore>
addLine("f1 0 8192 10 1")
addLine("f42 0 16 -2 0 0 0 0 .02  .03 .05 .07 .07 .09 .1 .1 .1 .1 .1 .1 .1")
addLine("f31 0 32   -2  -997 -1057 -1116 -1188 -1277 -1356 -1422 -1491 -1557 -1617  -1783 -1807 -1931 -2049 -2157 -2221 0.82 0.81 0.8  0.79  0.78  0.77  0.76  0.75  0.74  0.73 .72 .71 .7 .69 .68 .67")
addLine("f32 0 32   -2  -1007 -1039 -1107 -1132 -1245 -1391 -1435 -1473 -1537 -1609  -1791 -1817 -1941 -2039 -2149 -2234 0.82 0.81 0.8  0.79  0.78  0.77  0.76  0.75  0.74  0.73 .72 .71 .7 .69 .68 .67")

forInst(77)
p2 = .1
p3 = getUserValue('total_time')

forInst(197)
p2 = 0
p3 = getUserValue('total_time')


forInst(187)
p2 = 0
p3 = getUserValue('total_time')

for i in range(getUserValue('no_of_grains')):
    forInst(i+1)
    p2 = .035 + i * .01
    p3 = getUserValue('total_time')

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
