<CeciliaInterface>
csampler snd2 -label Sound
cgraph enveloppe -label Envelope -min 0. -max 1 -gen 23 -col red -func 0 0. .001 1 .05 .85 .97 .6 1 0.
crange freq -label Pitch Range -unit pch -min 1 -max 90 -init 40,80  -col marineblue
crange speed -label Speed Range -unit Hz -rel log -min 0.01 -max 100 -init 1, 2 -col forestgreen
crange intensity -label Intensity Range -unit db -min 30 -max 90 -init 60.0, 80.0 -col blue
crange start -label Sample Start Range  -min 0 -max 1 -init .1, .5 -col blue
crange dur -label Duration Extender -unit x -rel log -min .05 -max 5 -init 1.5, 4 -col khaki
cslider spat -label Pan Range -min 0 -max 1 -init 1  -col olivegreen
cslider density -label Density -min 0 -max 1 -init 1 -col olivegreen
cslider no_of_grains -label Number of grains -rate k -res int -min 2 -max 40 -init 8 -gliss 0 -up 1 -col olivegreen
cslider seed -label Master Seed -min 0 -max 2000 -init 50 -res int -gliss 0 -up 1 -col olivegreen
cslider maxall -label Max # of Instances -min 0 -max 100 -init 50 -res int -gliss 0 -up 1 

cpopup duri -label Time Noise Source -value rand bexprnd exprand poisson betarand weibull gauss -col forestgreen
cpopup freqi -label Freq Noise Source -value rand bexprnd exprand poisson betarand weibull gauss -col marineblue
cpopup inti -label Amp Noise Source -value  rand bexprnd exprand poisson betarand weibull gauss -col red
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>
ga2                  init        0
ga1                  init        0
iseed                rnd31       1, 1
giseed               =           iseed+1 

                     instr 197
if gkfreqi == 0 then 
gkpfreq1             rand        1, .9874653*giseed
elseif gkfreqi == 1 then
gkpfreq1             bexprnd     1
elseif gkfreqi == 2 then
gkpfreq1             exprand     1
elseif gkfreqi == 3 then
gkpfreq1             betarand    1, 1, .8
elseif gkfreqi == 4 then
gkpfreq1             weibull     1, .5
elseif gkfreqi == 5 then
gkpfreq1             gauss       2
endif

if gkduri == 0 then
gkpdur1              rand        1, .4653*giseed
elseif gkduri == 1 then
gkpdur1              bexprnd     1
elseif gkduri == 2 then
gkpdur1              exprand     1
elseif gkduri == 3 then
gkpdur1              poisson     1
elseif gkduri == 4 then
gkpdur1              betarand    1, .5, .8
elseif gkduri == 5 then
gkpdur1              weibull     1, .5
elseif gkduri == 6 then
gkpdur1              gauss       2
endif

if gkinti == 0 then 
gkpint1              rand        1, .274653*giseed
elseif gkinti == 1 then
gkpint1              bexprnd     1
elseif gkinti == 2 then
gkpint1              exprand     1
elseif gkinti == 3 then
gkpint1              poisson     1
elseif gkinti == 4 then
gkpint1              betarand    1, .5, .8
elseif gkinti == 5 then
gkpint1              weibull     1, .5
elseif gkinti == 6 then
gkpint1              gauss       2
endif

                     endin

                     instr 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25
kiryt                init        .1
kpint                init        .1
idu                  init        .1
idur                 init        .1

iseed                =           p1*giseed
kpryt                rand        1, iseed*.243 
kpfreq               =           gkpfreq1
kpint                =           gkpint1

kpintk = kpint/6
kppan                rand        1, iseed*.634 
kpjou                rand        1, iseed*.824 

kpphs                rand        1, iseed*.951 
kpdur                =           gkpdur1
kspat                random      -gkspat,gkspat

kgfff                random      gkfreqmin+50, gkfreqmax+50
kgfffi = int(kgfff)
kgdmax               =           gkdurmax 
kgdmin               =           gkdurmin 
kgis                 =           ampdb(gkintensitymax)
kgii                 =           ampdb(gkintensitymin)
kiryt                =           int(kr/exp(log(gkspeedmin) + (abs(kpryt) * (log(gkspeedmax)-log(gkspeedmin)))))/kr

chic:
ktrigger             init        1
iryt                 =           i(kiryt)+1/kr
ipo                  =           i(kgfffi)
ipoooo               =           int(ipo/12)
ipou                 =           ipo % 12
ipou2                table       ipou, 42
ipou3                =           ipou2+ipoooo
ifreq                =           cpspch(ipou3)
idur                 =           i(gkdurmin)+(abs(i(kpdur)*i(gkdurmax)) -i(gkdurmin))
ispa                 =           .5 +(i(kspat)*.5)
ijou                 =           abs(i(kpjou))
idens                =           i(gkdensity)
iphs                 =           abs(i(kpphs))
iinten               =           exp(log(i(kgii))+abs(i(kpintk))*(log(i(kgis))-log(i(kgii))))
iamp                 =           (ijou < idens?iinten:0)
icar                 =           i(gkcarrier)
imod                 =           i(gkmod)
idu                  =           idur*iryt+1/kr

if (ktrigger == 0) goto contin 
                     event       "i", gktypou+175, 0, idu, ifreq, iamp, icar, imod
                     ktrigger             =           0
contin:
                     timout      0, iryt, montreal
                     reinit      chic
montreal:

                     endin




                     instr 175

ktrans               =           semitone(gktransx)
klin                 oscili      gkmaxindex, 1/p3, 27

asog                 foscili     p5*.5, p4*ktrans, p6, p7, klin, 1, 1
asig                 foscili     p5*.5, p4*ktrans*1.005, p6, p7, klin, 1, 1

aline                line        0.0001, p3, 1
aenv                 tablei      aline, 23, 1

aoutL                dcblock     aenv*(asig+asog)

                     out         aoutL

                     endin




                     instr 176

ktrans               =           semitone(gktransx)

kdev                 randomi     .9, 1.1, .5
kmod                 lfo         gkmaxindex*10, 100.5*kdev*gkmod

klin                 oscil       1, 1/p3, 27
klo                  =           klin*.8+.01

asog                 vco2        p5, p4 *ktrans+kmod*kdev, 20 , klo , 0 
asig                 vco2        p5, p4*ktrans*1.0013+kmod*kdev , 20 , klo , 0 

aline                line        0.0001, p3, 1
aenv                 table       aline, 23, 1 

aoutL                dcblock     aenv*(asog+asig)



                     out         aoutL
                     endin




instr 131


ktrig       changed     gkno_of_grains
if ktrig = 1 then
            event     "i", 44, .0, .001
            event     "i", 130, 0.002, p3
endif


endin



            instr 130

inum        =           1
generate:
            event_i     "i", inum, 0.002, p3

if (inum < i(gkno_of_grains)) then
inum = inum + 1
goto generate
endif

            endin



            instr 44


            turnoff2    1,0,0.5
            turnoff2    2,0,0.5
            turnoff2    3,0,0.5
            turnoff2    4,0,0.5
            turnoff2    5,0,0.5
            turnoff2    6,0,0.5
            turnoff2    7,0,0.5
            turnoff2    8,0,0.5
            turnoff2    9,0,0.5
            turnoff2    10,0,0.5
            turnoff2    11,0,0.5
            turnoff2    12,0,0.5
            turnoff2    13,0,0.5
            turnoff2    14,0,0.5
            turnoff2    15,0,0.5
            turnoff2    16,0,0.5
            turnoff2    17,0,0.5
            turnoff2    18,0,0.5
            turnoff2    19,0,0.5
            turnoff2    20,0,0.5
            turnoff2    21,0,0.5
            turnoff2    22,0,0.5
            turnoff2    23,0,0.5
            turnoff2    24,0,0.5
            turnoff2    25,0,0.5
            turnoff2    175,0,0.5

            endin









</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
gisr        filesr      [snd2] 
gile1       filelen     [snd2] 
gile        =           (gile1 - [offsnd2])*(gisr - 1 )
imax    =   100
            maxalloc    1,imax
            maxalloc    2,imax
            maxalloc    3,imax
            maxalloc    4,imax
            maxalloc    5,imax
            maxalloc    6,imax
            maxalloc    7,imax
            maxalloc    8,imax
            maxalloc    9,imax
            maxalloc    10,imax
            maxalloc    11,imax
            maxalloc    12,imax
            maxalloc    13,imax
            maxalloc    14,imax
            maxalloc    15,imax
            maxalloc    16,imax
            maxalloc    17,imax
            maxalloc    18,imax
            maxalloc    19,imax
            maxalloc    20,imax
            maxalloc    20,imax
            maxalloc    21,imax
            maxalloc    22,imax
            maxalloc    23,imax
            maxalloc    24,imax
            maxalloc    25,imax
            maxalloc    26,imax
            maxalloc    27,imax
            maxalloc    28,imax
            maxalloc    29,imax
            maxalloc    30,imax
            maxalloc    30,imax
            maxalloc    31,imax
            maxalloc    32,imax
            maxalloc    33,imax
            maxalloc    34,imax
            maxalloc    35,imax
            maxalloc    36,imax
            maxalloc    37,imax
            maxalloc    38,imax
            maxalloc    39,imax
            maxalloc    40,imax




            instr 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40

            seed        p1*i(gkseed)


if gkfreqi == 0 then
gkpfreq1    unirand     1
elseif gkfreqi == 1 then
gkpfreq1    bexprnd     1
elseif gkfreqi == 2 then
gkpfreq1    exprand     1
elseif gkfreqi == 3 then
gkpfreq1    poisson     1
elseif gkfreqi == 4 then
gkpfreq1    betarand    1, .5, .8
elseif gkfreqi == 5 then
gkpfreq1    weibull     1, .5
elseif gkfreqi == 6 then
gkpfreq1    gauss       2
endif


if gkduri == 0 then
gkpdur1     unirand     1
elseif gkduri == 1 then
gkpdur1     bexprnd     1
elseif gkduri == 2 then
gkpdur1     exprand     1
elseif gkduri == 3 then
gkpdur1     poisson     1
elseif gkduri == 4 then
gkpdur1     betarand    1, .5, .8
elseif gkduri == 5 then
gkpdur1     weibull     1, .5
elseif gkduri == 6 then
gkpdur1     gauss       2
endif

if gkinti == 0 then 
gkpint1     unirand     1
elseif gkinti == 1 then
gkpint1     bexprnd     1
elseif gkinti == 2 then
gkpint1     exprand     1
elseif gkinti == 3 then
gkpint1     poisson     1
elseif gkinti == 4 then
gkpint1     betarand    1, .5, .8
elseif gkinti == 5 then
gkpint1     weibull     1, .5
elseif gkinti == 6 then
gkpint1     gauss       2
endif


kpdens      rand        1, p1*.824 
kspat       random      -gkspat,gkspat
kstart      random      gkstartmin,gkstartmax
kdur        random      gkdurmin,gkdurmax


kampw       =           ampdb( ((gkintensitymax - gkintensitymin) * abs(gkpint1)) + gkintensitymin)
kamp        limit       kampw,0,30000

kgpitw      =           int((((gkfreqmax - gkfreqmin) * abs(gkpfreq1)) + gkfreqmin)+50)
kgpit       limit       kgpitw,0,120

kiryt       =           int(kr/exp(log(gkspeedmin) + (abs(gkpdur1) * (log(gkspeedmax)-log(gkspeedmin)))))/kr


rein:
ktrigger    init        1
iryt        =           i(kiryt)
ipo         =           i(kgpit)
ipou        =           ipo % 12
ipou2       table       ipou, 42
ipou3       =           ipou2+int(ipo/12)
ifreq       =           cpspch(ipou3+1.0)
idu        =            i(kdur)*iryt
ispa        =           .5 +(i(kspat)*.5)
ijou        =           abs(i(kpdens))
idens       =           i(gkdensity)
iamp        =           i(kamp)
istart      =           i(kstart)*gile1
kins        active      1

if (ktrigger == 0) || (ijou>idens) goto contin 
            event       "i", 178, 0, idu, ifreq, iamp, ispa,istart
            ktrigger    =           0
contin:
            timout      0, iryt, ender
            reinit      rein
ender:
            endin



            instr 178
kamp        =           p5*.0001
ktrans      =           p4/440
ag,ad       sampler     [snd2],kamp,ktrans,p7
kline       line        0.0001, p3, 1
kenv        table       kline, 23, 1
aoutL       =           kenv*(ag)*p6
aoutR       =           kenv*(ad)*(1-p6) 
            outs        aoutR, aoutL
            endin



            instr 130
inum        =           1
;itim        =           0.001
generate:
            event_i     "i", inum, 0, p3
if (inum < i(gkno_of_grains)) then
inum        =           inum + 1
goto generate
endif
            endin


            instr 131
ktrig       changed     gkno_of_grains,gkseed
if ktrig = 1 then
            event       "i", 44, 0, .001
            event       "i", 130, 0.002, p3
endif
            endin


            instr 44
            turnoff2    1,0,.01
            turnoff2    2,0,.01
            turnoff2    3,0,.01
            turnoff2    4,0,.01
            turnoff2    5,0,.01
            turnoff2    6,0,.01
            turnoff2    7,0,.01
            turnoff2    8,0,.01
            turnoff2    9,0,.01
            turnoff2    10,0,.01
            turnoff2    11,0,.01
            turnoff2    12,0,.01
            turnoff2    13,0,.01
            turnoff2    14,0,.01
            turnoff2    15,0,.01
            turnoff2    16,0,.01
            turnoff2    17,0,.01
            turnoff2    18,0,.01
            turnoff2    19,0,.01
            turnoff2    20,0,.01
            turnoff2    21,0,.01
            turnoff2    22,0,.01
            turnoff2    23,0,.01
            turnoff2    24,0,.01
            turnoff2    25,0,.01
            turnoff2    26,0,.01
            turnoff2    27,0,.01
            turnoff2    28,0,.01
            turnoff2    29,0,.01
            turnoff2    30,0,.01
            turnoff2    31,0,.01
            turnoff2    32,0,.01
            turnoff2    33,0,.01
            turnoff2    34,0,.01
            turnoff2    35,0,.01
            turnoff2    36,0,.01
            turnoff2    37,0,.01
            turnoff2    38,0,.01
            turnoff2    39,0,.01
            turnoff2    40,0,.01

            turnoff2    178,0,0.5

            endin





</Stereo>


<CsoundScore>
;#   p1     p2   p3              p4    p5       p6       p7       p8       p9       p10      p11      p12      p13      p14      p15      p16      p17      p18      p19      p20      p21     p22     p23    p24     p25     p26     p27     p28     p29     p30     p31    p32    p33   p34    p35    p36    
f    1      0    8192            10    1        
f    42     0    16              -2    0        0        0        0        .02      .03      .05      .07      .07      .09      .1       .1       .1       .1       .1       .1       .1      
f    31     0    32              -2    -997     -1057    -1116    -1188    -1277    -1356    -1422    -1491    -1557    -1617    -1783    -1807    -1931    -2049    -2157    -2221    0.82    0.81    0.8    0.79    0.78    0.77    0.76    0.75    0.74    0.73    .72    .71    .7    .69    .68    .67    
f    32     0    32              -2    -1007    -1039    -1107    -1132    -1245    -1391    -1435    -1473    -1537    -1609    -1791    -1817    -1941    -2039    -2149    -2234    0.82    0.81    0.8    0.79    0.78    0.77    0.76    0.75    0.74    0.73    .72    .71    .7    .69    .68    .67    
f27 0 8192 10 1
i    131    0    [total_time]    


e    



</CsoundScore>


<PythonScore>
addLine("f1 0 8192 10 1")
addLine("f42 0 16 -2 0 0 0 0 .02  .03 .05 .07 .07 .09 .1 .1 .1 .1 .1 .1 .1")
addLine("f31 0 32   -2  -997 -1057 -1116 -1188 -1277 -1356 -1422 -1491 -1557 -1617  -1783 -1807 -1931 -2049 -2157 -2221 0.82 0.81 0.8  0.79  0.78  0.77  0.76  0.75  0.74  0.73 .72 .71 .7 .69 .68 .67")
addLine("f32 0 32   -2  -1007 -1039 -1107 -1132 -1245 -1391 -1435 -1473 -1537 -1609  -1791 -1817 -1941 -2039 -2149 -2234 0.82 0.81 0.8  0.79  0.78  0.77  0.76  0.75  0.74  0.73 .72 .71 .7 .69 .68 .67")

forInst(77)
p2 = .1
p3 = getUserValue('total_time')

forInst(197)
p2 = 0
p3 = getUserValue('total_time')


forInst(187)
p2 = 0
p3 = getUserValue('total_time')

for i in range(getUserValue('no_of_grains')):
    forInst(i+1)
    p2 = .035 + i * .01
    p3 = getUserValue('total_time')

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
