<CeciliaInterface>
csampler snd -label audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -func 0 0 .0001 1 .99 1 1 0
cslider smoa -label Smoother Amps -min 0.0001 -max 1 -rel log -init 0.01 -col forestgreen
cslider smof -label Smoother Freqs -min 0.0001 -max 1 -rel log -init 0.01  -col orange
cslider mix -label Dry/Wet -min 0 -max 100 -unit % -init 100 -col blue
cpopup fft -label FFT Size -rate k -value  64 128 256 512 1024 2048 4096 8192 -init 1024 -gliss 0 -col royalblue
cpopup winsiz -label Window Size * -value 2 4 8 16 -init 2 -col royalblue
cpopup olaps -label Overlaps  -value 2 4 8 16 -init 2 -col royalblue
ctoggle togAmp -label Freeze Amp -init 1 -rate k  -col forestgreen
cbutton hitAmp -label Freeze New Amp -trig 0 -help Press this button to freeze on a new frame in the sound  -col forestgreen
ctoggle togFre -label Freeze Freq -init 0 -rate k  -col orange
cbutton hitFre -label Freeze New Freq -trig 0 -help Press this button to freeze on a new frame in the sound  -col orange
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>
                instr 1

aOri1     sampler     [snd]



ktrig           changed     gkwinsiz,gkolaps,gkfft
if ktrig = 1 then
            reinit      pass
endif

pass:





if gktogAmp = 1 then
        kamp            =           1 - gkhitAmp
    else
        kamp            =           0
endif

if gktogFre = 1 then
        kfre            =           1- gkhitFre
    else
        kfre            =           0
endif



ifftsize    pow         2, i(gkfft)+6
iolapsf     pow         2,i(gkolaps)+1
iwin        pow         2,i(gkwinsiz)+1
iwinsize    =           ifftsize*iwin
iolaps      =           ifftsize/iolapsf

if (iolaps >= ifftsize) then
iolaps      =           iolaps / 2
endif

if (iolaps < 16) then
iolaps      =           16
endif



fsig            pvsanal     aOri1,ifftsize,iolaps,iwinsize,0

fsig3           pvsfreeze   fsig,kamp,kfre

fsig5           pvsmooth    fsig3,.01,.01


aProc1          pvsynth     fsig3

aOri1           delay       aOri1, iwinsize/sr

kMix            port        gkmix*.01,0.025

aGauche         =           ((aProc1*kMix)+(aOri1*(1-kMix)))*0.5*gkenv

                out        aGauche

                endin







</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
                instr 1
gkfre           init        1
aOri1,aOri2     sampler     [snd]



if gktogAmp = 1 then
        kamp            =           1 - gkhitAmp
    else
        kamp            =           0
endif

if gktogFre = 1 then
        kfre            =           1- gkhitFre
    else
        kfre            =           0
endif



ktrig           changed     gkwinsiz,gkolaps,gkfft
if ktrig = 1 then
                reinit      pass
endif

pass:
ifftsize        pow         2, i(gkfft)+6
iolapsf         pow         2,i(gkolaps)+1
iwin            pow         2,i(gkwinsiz)+1
iwinsize        =           ifftsize*iwin
iolaps          =           ifftsize/iolapsf

if (iolaps >= ifftsize) then
iolaps          =           iolaps / 2
endif

if (iolaps < 16) then
iolaps          =           16
endif


fsig            pvsanal     aOri1,ifftsize,iolaps,iwinsize,0
fsig2           pvsanal     aOri2,ifftsize,iolaps,iwinsize,0

fsig3           pvsfreeze   fsig,kamp,kfre
fsig4           pvsfreeze   fsig2,kamp,kfre

fsig5           pvsmooth    fsig3,gksmoa,gksmof
fsig6           pvsmooth    fsig4,gksmoa,gksmof

aProc1          pvsynth     fsig5
aProc2          pvsynth     fsig6

aOri1           delay       aOri1, iwinsize/sr
aOri2           delay       aOri2, iwinsize/sr

kMix            port        gkmix*.01,0.025

aGauche         =           ((aProc1*kMix)+(aOri1*(1-kMix)))*0.5*gkenv
aDroite         =           ((aProc2*kMix)+(aOri2*(1-kMix)))*0.5*gkenv


                outs        aGauche, aDroite

                endin
</Stereo>


<CsoundScore>
;#   p1   p2   p3              p4       
i    1    0    [total_time]    1        
</CsoundScore>


<PythonScore>

import random


for i in range(1,getUserValue("no_of_grains")+2):

    forInst(1)

    p2 = random.uniform(.002, .006)
    p3 = "[total_time]"
    p4 = random.uniform(.99, 1.01)

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
