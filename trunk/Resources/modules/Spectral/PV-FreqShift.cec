<CeciliaInterface>
csampler snd -label audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func 0 0 .0001 1 .99 1 1 0
cslider pit1 -label Freq Shift -u Hz -min -5000  -max 5000 -init 250 -col green
cslider pit2 -label Lowest Freq -u Hz -min -1000 -max 1000 -init 50 -col forestgreen
cslider mix -label Dry/Wet -min 0 -max 100 -unit % -init 100 -col blue
cpopup fft -label FFT Size -rate k -value  64 128 256 512 1024 2048 4096 8192 -init 1024 -gliss 0 -col forestgreen
cpopup winsiz -label Window Size * -value 2 4 8 16 -init 2 -col forestgreen
cpopup olaps -label Overlaps  -value 2 4 8 16 -init 2 -col forestgreen
cpopup form -label Keep formants -value None Original Filtered -init 2 -col orange
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>
             instr 1

aOri1  sampler    [snd]




ktrig               changed     gkwinsiz,gkolaps,gkfft,gkform
if ktrig = 1 then
            reinit      pass
endif

pass:


ifftsize    pow         2, i(gkfft)+6
iolapsf     pow         2,i(gkolaps)+1
iwin        pow         2,i(gkwinsiz)+1
iwinsize    =           ifftsize*iwin
iolaps      =           ifftsize/iolapsf

if (iolaps >= ifftsize) then
iolaps      =           iolaps / 2
endif

if (iolaps < 16) then
iolaps      =           16
endif



fsig         pvsanal    aOri1,ifftsize,iolaps,iwinsize,0

fsig3        pvshift    fsig,gkpit1*p4,gkpit2,i(gkform),1

aProc1       pvsynth    fsig3

aOri1        delay      aOri1, iwinsize/sr

kMix         port       gkmix*.01,0.025

aGauche      =          ((aProc1*kMix)+(aOri1*(1-kMix)))*0.5*gkenv

             out       aGauche

             endin







</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
             instr 1

aOri1,aOri2  sampler    [snd]




ktrig               changed     gkwinsiz,gkolaps,gkfft,gkform
if ktrig = 1 then
            reinit      pass
endif

pass:


ifftsize    pow         2, i(gkfft)+6
iolapsf     pow         2,i(gkolaps)+1
iwin        pow         2,i(gkwinsiz)+1
iwinsize    =           ifftsize*iwin
iolaps      =           ifftsize/iolapsf

if (iolaps >= ifftsize) then
iolaps      =           iolaps / 2
endif

if (iolaps < 16) then
iolaps      =           16
endif



fsig         pvsanal    aOri1,ifftsize,iolaps,iwinsize,0
fsig2        pvsanal    aOri2,ifftsize,iolaps,iwinsize,0

fsig3        pvshift    fsig,gkpit1*p4,gkpit2,i(gkform),1
fsig4        pvshift    fsig2, gkpit1*p4,gkpit2,i(gkform),1

aProc1       pvsynth    fsig3
aProc2       pvsynth    fsig4

aOri1        delay      aOri1, iwinsize/sr
aOri2        delay      aOri2, iwinsize/sr

kMix         port       gkmix*.01,0.025

aGauche      =          ((aProc1*kMix)+(aOri1*(1-kMix)))*0.5*gkenv
aDroite      =          ((aProc2*kMix)+(aOri2*(1-kMix)))*0.5*gkenv

             outs       aGauche, aDroite

             endin







</Stereo>


<CsoundScore>
;#   p1   p2   p3              p4       
i    1    0    [total_time]    1        
</CsoundScore>


<PythonScore>

import random


for i in range(1,getUserValue("no_of_grains")+2):

    forInst(1)

    p2 = random.uniform(.002, .006)
    p3 = "[total_time]"
    p4 = random.uniform(.99, 1.01)

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
