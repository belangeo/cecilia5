<CeciliaInterface>
csampler snd -label audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1 -col red -func 0 0 .001 1 .999 1 1 0 
cslider pit1 -label Scale Bins -unit semitones -min -48 -max 48 -init -12 -col forestgreen
cslider mix -label Dry/Wet -min 0 -max 100 -unit % -init 100 -col blue
cpopup fft -label FFT Size -rate k -value  64 128 256 512 1024 2048 4096 8192 -init 1024 -gliss 0 -col forestgreen
cpopup winsiz -label Window Size * -value 2 4 8 16 -init 2 -col forestgreen
cpopup olaps -label Overlaps  -value 2 4 8 16 -init 2 -col forestgreen
cpopup form -label Keep formants -value No Original Filtered -col forestgreen
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>
                instr 1 

aOri1,aOri2     sampler     [snd]


ktrig           changed     gkwinsiz,gkolaps,gkfft,gkform
if ktrig = 1 then
                reinit      pass
endif

pass:


ifftsize        pow         2, i(gkfft)+6
iolapsf         pow         2,i(gkolaps)+1
iwin            pow         2,i(gkwinsiz)+1
iwinsize        =           ifftsize*iwin
iolaps          =           ifftsize/iolapsf

if (iolaps >= ifftsize) then
iolaps          =           iolaps / 2
endif

if (iolaps < 16) then
iolaps          =           16
endif

fsig            pvsanal     aOri1, ifftsize, iolaps, iwinsize, 0 

fsig3           pvscale     fsig, semitone(gkpit1), i(gkform)

fsig5           pvsmooth    fsig3,.21,.21


aProc1          pvsynth     fsig5

aOri1           delay       aOri1, iwinsize/sr

if gkform = 2 then
kcal = 4
else
kcal = 1
endif


kMix            port        gkmix*.01, 0.025
aGauche         =           ((aProc1*kMix*5)+(aOri1*(1-kMix)))*0.1*gkenv*kcal

                out        aGauche

                endin

</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
                instr 1 

aOri1,aOri2     sampler     [snd]


ktrig           changed     gkwinsiz,gkolaps,gkfft,gkform
if ktrig = 1 then
                reinit      pass
endif

pass:


ifftsize        pow         2, i(gkfft)+6
iolapsf         pow         2,i(gkolaps)+1
iwin            pow         2,i(gkwinsiz)+1
iwinsize        =           ifftsize*iwin
iolaps          =           ifftsize/iolapsf

if (iolaps >= ifftsize) then
iolaps          =           iolaps / 2
endif

if (iolaps < 16) then
iolaps          =           16
endif

fsig            pvsanal     aOri1, ifftsize, iolaps, iwinsize, 0 
fsig2           pvsanal     aOri2, ifftsize, iolaps, iwinsize, 0 

fsig3           pvscale     fsig, semitone(gkpit1), i(gkform)
fsig4           pvscale     fsig2, semitone(gkpit1), i(gkform)

fsig5           pvsmooth    fsig3,.21,.21
fsig6           pvsmooth    fsig4,.21,.21


aProc1          pvsynth     fsig5
aProc2          pvsynth     fsig6

aOri1           delay       aOri1, iwinsize/sr
aOri2           delay       aOri2, iwinsize/sr

if gkform = 2 then
kcal = 4
else
kcal = 1
endif


kMix            port        gkmix*.01, 0.025
aGauche         =           ((aProc1*kMix*5)+(aOri1*(1-kMix)))*0.1*gkenv*kcal
aDroite         =           ((aProc2*kMix*5)+(aOri2*(1-kMix)))*0.1*gkenv*kcal

                outs        aGauche, aDroite

                endin

</Stereo>


<CsoundScore>
;#   p1   p2   p3              
i    1    0    [total_time]    
</CsoundScore>


<PythonScore>

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
