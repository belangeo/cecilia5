<CeciliaInterface>
csampler snd -label audio
cgraph env -label Envelope -unit x -rel lin -min 0 -max 1  -col red -func 0 0 .001 1 .999 1 1 0
cslider gain -label Noise gain -rel log -min 0.0001  -max 2 -init .0005 -col forestgreen
cslider thresh -label Noise threshold -rel log -min 0.0001 -max 1 -init .002  -col forestgreen
cpopup fft -label FFT Size -rate k -value  64 128 256 512 1024 2048 4096 8192 -init 1024 -gliss 0  -col royalblue
cpopup winsiz -label Window Size * -value 2 4 8 16 -init 2 -col royalblue
cpopup olaps -label Overlaps  -value 2 4 8 16 -init 2 -col royalblue
</CeciliaInterface>

<5.1>

</5.1>

<Custom...>

</Custom...>

<Mono>

             instr 1

aOri1  sampler      [snd]


ktrig           changed     gkwinsiz,gkolaps,gkfft
if ktrig = 1 then
            reinit      pass
endif

pass:


ifftsize    pow         2, i(gkfft)+6
iolapsf     pow         2,i(gkolaps)+1
iwin        pow         2,i(gkwinsiz)+1
iwinsize    =           ifftsize*iwin
iolaps      =           ifftsize/iolapsf

if (iolaps >= ifftsize) then
iolaps      =           iolaps / 2
endif

if (iolaps < 16) then
iolaps      =           16
endif


fsig         pvsanal      aOri1,ifftsize,iolaps,iwinsize,0

fsig3        pvstencil    fsig, gkgain, gkthresh, 1


aProc1       pvsynth      fsig3


aGauche      =            aProc1*0.5*gkenv

             out         aGauche

             endin







</Mono>

<Octo>

</Octo>

<Quad>

</Quad>

<Stereo>
             instr 1

aOri1,aOri2  sampler      [snd]


ktrig           changed     gkwinsiz,gkolaps,gkfft
if ktrig = 1 then
            reinit      pass
endif

pass:


ifftsize    pow         2, i(gkfft)+6
iolapsf     pow         2,i(gkolaps)+1
iwin        pow         2,i(gkwinsiz)+1
iwinsize    =           ifftsize*iwin
iolaps      =           ifftsize/iolapsf

if (iolaps >= ifftsize) then
iolaps      =           iolaps / 2
endif

if (iolaps < 16) then
iolaps      =           16
endif

fsig         pvsanal      aOri1,ifftsize,iolaps,iwinsize,0
fsig2        pvsanal      aOri2,ifftsize,iolaps,iwinsize,0

fsig3        pvstencil    fsig, gkgain, gkthresh, 1
fsig4        pvstencil    fsig2, gkgain, gkthresh, 1

aProc1       pvsynth      fsig3
aProc2       pvsynth      fsig4


aGauche      =            aProc1*0.5*gkenv
aDroite      =            aProc2*0.5*gkenv

             outs         aGauche, aDroite

             endin







</Stereo>


<CsoundScore>
;#   p1   p2   p3              p4   p5   p6      p7   
f    1    0    4097            -7   10000    4097    0   
i    1    0    [total_time]    
</CsoundScore>


<PythonScore>

</PythonScore>


<CeciliaOpen>
scoreType=Csound

</CeciliaOpen>

<CeciliaData>
</CeciliaData>
