class Module(BaseModule):
    """
    DOCSTRING PLACEHOLDER
    """
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addSampler("snd")

        size = int(self.fftsize_value)
        olaps = 4
        self.oneOverSr = 1.0 / self.sr
        self.frange_bounds = {0: 2, 1: 4, 2: 8, 3:16}

        self.delsrc = Delay(self.snd, delay=size*self.oneOverSr*2)

        self.filter = NewTable(8192./self.sr)
        self.interpolation = TableMorph(self.interpol, self.filter, [self.filter_table_1, self.filter_table_2])
        
        self.fin = FFT(self.snd, size=size, overlaps=olaps)
        
        frange_bound = self.frange_bounds[self.filter_range_index]
        self.index = Scale(self.fin["bin"], 0, size, 0, frange_bound, 1)
        self.amp = Pointer(self.filter, Clip(self.index, 0, 1))
        
        self.real = self.fin["real"] * self.amp
        self.imag = self.fin["imag"] * self.amp

        self.fout = IFFT(self.real, self.imag, size=size, overlaps=olaps)
        self.ffout = self.fout.mix(self.nchnls)
        self.fade = SigTo(value=1, time=.05, init=1)
        self.out = Interp(self.delsrc*self.env, self.ffout*self.env, self.mix, mul=self.fade)

    def fftsize(self, index, value):
        newsize = int(value)
        self.fade.value = 0
        time.sleep(.05)
        self.delsrc.delay = newsize*self.oneOverSr*2
        self.fin.size = newsize
        self.fout.size = newsize
        self.index.inmax = newsize
        time.sleep(.05)
        self.fade.value = 1

    def wtype(self, index, value):
        self.fin.wintype = index
        self.fout.wintype = index

    def filter_range(self, index, value):
        self.index.outmax = self.frange_bounds[index]

Interface = [   csampler(name="snd"), 
                cgraph(name="filter_table_1", label="Spectral Filter 1", table=True, size=8192, 
                       func=[(0,0),(0.05,1),(0.1,0),(0.2,0),(0.3,.7),(0.4,0),(0.5,0),(0.6,.5),(0.7,0),(1,0)], col="green"),
               cgraph(name="filter_table_2", label="Spectral Filter 2", table=True, size=8192, 
                      func=[(0,0),(0.02,1),(0.07,0),(0.25,0),(0.35,.7),(0.5,0),(0.65,0),(0.75,.5),(0.9,0),(1,0)], col="forestgreen"),
                cgraph(name="env", label="Overall Amplitude", func=[(0,1),(1,1)], col="blue"),
                cslider(name="interpol", label="Filters interpolation", min=0, max=1, init=0, rel="lin", unit="x", col="olivegreen"),
                cslider(name="mix", label="Dry / Wet", min=0, max=1, init=1, rel="lin", unit="x", col="blue"),
                cpopup(name="filter_range", label="Filter Range", init="Up to Nyquist/2", 
                       value=["Up to Nyquist", "Up to Nyquist/2", "Up to Nyquist/4", "Up to Nyquist/8"], col="green"),
                cpopup(name="fftsize", label="FFT Size", init="1024", value=["16", "32", "64", "128", "256", "512", "1024", "2048", "4096", "8192"], col="red"),
                cpopup(name="wtype", label="FFT Envelope", init="Hanning", col="red", value=["Rectangular", "Hamming", "Hanning", "Bartlett",
                            "Blackman 3", "Blackman 4", "Blackman 7", "Tuckey", "Sine"]),
                cpopup(name="overlaps", label="FFT Overlaps", rate="i", init="4", value=["1", "2", "4", "8", "16"]),
                cpoly()
          ]

