This is a short description of the menus that the user will find in the upper part of the screen.

\subsection
The "Python" menu gives access to the Preferences window. There are also commands to hide the graphical interface (see "Hide Python") or the other applications (see "Hide Others"); the user can also quit Cecilia5 (see "Quit Python").
**image 7-Menu_python.png** --> image Ã  remplacer pcq version 5.0.7 beta?

\subsection
The "File" menu gives access to the following commands:
\begin{itemize}
\item Open: Opens a Cecilia5 file (with the extension .c5) saved by the user.
\item Open Random: Chooses a random Cecilia5 module and opens it.
\items Modules: In this menu, the user can choose a Cecilia5 module. The modules fall in eight categories. For more information on modules, please see chapters 4 to 11.
**image 8b-ModulesCategories.png**
\item Open Recent: Opens a Cecilia5 file which has been recently modified and saved by the user.
\item Save and Save as: Saves the module on which the user is currently working. The saved file will be in Cecilia5 (.c5) format.
\intem Module as Text: Opens a text file that contains the source code of the module, for more information on it or if the user wishes to modify it. (For more information on modifications on those files, please see chapter 12.) If no text editor has been selected in the Preferences yet, a dialog window will appear to let the user choose one.
**image 9-ChooseTextEditor.png**
\item Reload module: Reloads the module from the source code. The user should execute this command if the module source code has been modified.
**image 8-Menu_file.png** \end{itemize}

\subsection
The "Edit" menu gives access to the Undo, Redo, Copy and Paste commands. These commands will only have an effect on the graph and are not related to the other parameters of the module.  Check the "Remember input sound" if you wish that Cecilia5 remembers the input sound you chose for each new module opening.
**image 10-Menu_edit.png**

\subsection
In the "Action" menu, the commands "Play/Stop" and "Bounce to Disk" are equivalent to the "Play" and "Record" buttons of the transport bar.
**image 11-Menu_Action.png**
The command "Batch Processing on Sound Folder" applies the module's current settings to all sound files present in the folder that contains the input sound file.  The command "Batch Processing on Preset Sequence" applies all saved presets of the module to the chosen input sound file.  These two commands processes more than one sound file at a time. Before executing one of these commands, Cecilia5 will ask the user to enter a suffix to identify the new created sound files.
**image 12-ChooseFilenameSuffix.png**
The "Use MIDI" indicates if Cecilia5 has already found a MIDI device.


\subsection
In the "Window" menu, the user can minimize the graphical interface window (see "Minimize"), zoom in this window (see "Zoom" - click once to zoom in and twice to zoom out) and bring all Cecilia5 windows to fromt (see "Bring All to Front").  The command "Eh Oh Mario!" changes a little something in the graphical interface that could make the user smile. The command "interface - nameofthemodule.c5" is part of the system's properties that makes all open windows of the application available to the user.
**image 13-Menu_Window.png**

\subsection
In the "Help" menu, the user can search for a command in the different menus; please enter a key word in the search box.  Click on "Show module info" to access a short description of the module that is currently used.  Click on "Show API Documentation" to access the documentation related to Cecilia5's programming interface.  This documentation contains all classes and methods declarations and information on all menus and commands related to the currently used module. For more information on Cecilia5's API, please see chapter 12.
**image 14-Menu_Help.png**

\subsection
List of shortcuts:
\begin{itemize}
\item cmd-h: Hide Cecilia5' window
\item alt-cmd-h: Hide the other applications' windows
\item cmd-o: Open a Cecilia5 file
\item shift-cmd-o: Open a random Cecilia5 file
\item cmd s: Save the current file
\item shift-cmd-s: Save the current file as...
\item cmd-e: Open the text file that contains the source code of the module
\item cmd-r: Reload module with all saved modifications in the source code
\item cmd-c: Copy (graph only)
\item cmd-v: Paste (graph only)
\item cmd-z: Undo (graph only)
\item shift-cmd-z: Redo (graph only)
\item cmd-.: Play/Stop
\item cmd-b: Bounce to disk ("Record" button)
\item cmd-m: Minimize window
\item shift-cmd-e: Eh Oh Mario!
\item cmd-i: Open module documentation
\item cmd-d: Open API Documentation
\end{itemize}