class Module(BaseModule):
    def __init__(self):
        BaseModule.__init__(self)
        self.snd = self.addSampler("snd")
        self.table = ChebyTable([1.0, -0.25, 0.0, 0.0, 0.5, 0.0, -0.5, 0.0])
        self.lookup = Lookup(self.table, self.snd)
        self.lookdc = DCBlock(self.lookup)
        self.out = Biquadx(self.lookdc, freq=self.cut, q=0.707, stages=2)
        
        self.change = Metro(.05).play()
        self.call = TrigFunc(self.change, self.replace)

    def replace(self):
        c1 = self.coef1.get()
        c2 = self.coef2.get()
        c3 = self.coef3.get()
        c4 = self.coef4.get()
        c5 = self.coef5.get()
        c6 = self.coef6.get()
        c7 = self.coef7.get()
        c8 = self.coef8.get()
        self.table.replace([c1,c2,c3,c4,c5,c6,c7,c8])

Interface = [   csampler(name="snd"), 
                cslider(name="coef1", label="Coeff 1", min=-1.0, max=1.0, init=1.0, rel="lin"),
                cslider(name="coef2", label="Coeff 2", min=-1.0, max=1.0, init=-0.25, rel="lin"),
                cslider(name="coef3", label="Coeff 3", min=-1.0, max=1.0, init=0.0, rel="lin"),
                cslider(name="coef4", label="Coeff 4", min=-1.0, max=1.0, init=0.0, rel="lin"),
                cslider(name="coef5", label="Coeff 5", min=-1.0, max=1.0, init=0.5, rel="lin"),
                cslider(name="coef6", label="Coeff 6", min=-1.0, max=1.0, init=0.0, rel="lin"),
                cslider(name="coef7", label="Coeff 7", min=-1.0, max=1.0, init=-0.5, rel="lin"),
                cslider(name="coef8", label="Coeff 8", min=-1.0, max=1.0, init=0.0, rel="lin"),
                cslider(name="cut", label="LP Cutoff", min=100, max=18000, init=5000, rel="log"),
            ]
